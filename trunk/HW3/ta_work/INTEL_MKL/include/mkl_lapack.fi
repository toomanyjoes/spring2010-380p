!*******************************************************************************
!                              INTEL CONFIDENTIAL
!   Copyright(C) 1999-2007 Intel Corporation. All Rights Reserved.
!   The source code contained  or  described herein and all documents related to
!   the source code ("Material") are owned by Intel Corporation or its suppliers
!   or licensors.  Title to the  Material remains with  Intel Corporation or its
!   suppliers and licensors. The Material contains trade secrets and proprietary
!   and  confidential  information of  Intel or its suppliers and licensors. The
!   Material  is  protected  by  worldwide  copyright  and trade secret laws and
!   treaty  provisions. No part of the Material may be used, copied, reproduced,
!   modified, published, uploaded, posted, transmitted, distributed or disclosed
!   in any way without Intel's prior express written permission.
!   No license  under any  patent, copyright, trade secret or other intellectual
!   property right is granted to or conferred upon you by disclosure or delivery
!   of the Materials,  either expressly, by implication, inducement, estoppel or
!   otherwise.  Any  license  under  such  intellectual property  rights must be
!   express and approved by Intel in writing.
!
!*******************************************************************************
!  Content:
!      Intel(R) Math Kernel Library (MKL) Fortran interface for LAPACK routines
!*******************************************************************************

!DEC$IF .NOT. DEFINED (MKL_LAPACK_HEADER)

!DEC$DEFINE MKL_LAPACK_HEADER

      INTERFACE
      subroutine sbdsqr( uplo, n, ncvt, nru, ncc, d, e, vt, ldvt, u,    &
     &ldu, c, ldc, work, info )
      character          uplo
      integer            info, ldc, ldu, ldvt, n, ncc, ncvt, nru
      real               c( ldc, * ), d( * ), e( * ), u( ldu, * ),      &
     &vt( ldvt, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sdisna( job, m, n, d, sep, info )
      character          job
      integer            info, m, n
      real               d( * ), sep( * )
      END
      END INTERFACE

      INTERFACE
      function second()
      real               second
      END
      END INTERFACE

      INTERFACE
      subroutine sgbbrd( vect, m, n, ncc, kl, ku, ab, ldab, d, e, q,    &
     &ldq, pt, ldpt, c, ldc, work, info )
      character          vect
      integer            info, kl, ku, ldab, ldc, ldpt, ldq, m, n, ncc
      real               ab( ldab, * ), c( ldc, * ), d( * ), e( * ),    &
     &pt( ldpt, * ), q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgbcon( norm, n, kl, ku, ab, ldab, ipiv, anorm, rcond, &
     &work, iwork, info )
      character          norm
      integer            info, kl, ku, ldab, n
      real               anorm, rcond
      integer            ipiv( * ), iwork( * )
      real               ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgbequ( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,  &
     &amax, info )
      integer            info, kl, ku, ldab, m, n
      real               amax, colcnd, rowcnd
      real               ab( ldab, * ), c( * ), r( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgbrfs( trans, n, kl, ku, nrhs, ab, ldab, afb, ldafb,  &
     &ipiv, b, ldb, x, ldx, ferr, berr, work, iwork,                    &
     &info )
      character          trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgbsv( n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, info )
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      real               ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgbsvx( fact, trans, n, kl, ku, nrhs, ab, ldab, afb,   &
     &ldafb, ipiv, equed, r, c, b, ldb, x, ldx,                         &
     &rcond, ferr, berr, work, iwork, info )
      character          equed, fact, trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * ), iwork( * )
      real               ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &berr( * ), c( * ), ferr( * ), r( * ),                             &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgbtf2( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      real               ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgbtrf( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      real               ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgbtrs( trans, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb,&
     &info )
      character          trans
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      real               ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgebak( job, side, n, ilo, ihi, scale, m, v, ldv,      &
     &info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      real               v( ldv, * ), scale( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgebal( job, n, a, lda, ilo, ihi, scale, info )
      character          job
      integer            ihi, ilo, info, lda, n
      real               a( lda, * ), scale( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgebd2( m, n, a, lda, d, e, tauq, taup, work, info )
      integer            info, lda, m, n
      real               a( lda, * ), d( * ), e( * ), taup( * ),        &
     &tauq( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgebrd( m, n, a, lda, d, e, tauq, taup, work, lwork,   &
     &info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), d( * ), e( * ), taup( * ),        &
     &tauq( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sgecon( norm, n, a, lda, anorm, rcond, work, iwork,    &
     &info )
      character          norm
      integer            info, lda, n
      real               anorm, rcond
      integer            iwork( * )
      real               a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgeequ( m, n, a, lda, r, c, rowcnd, colcnd, amax,      &
     &info )
      integer            info, lda, m, n
      real               amax, colcnd, rowcnd
      real               a( lda, * ), c( * ), r( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgees( jobvs, sort, select, n, a, lda, sdim, wr, wi,   &
     &vs, ldvs, work, lwork, bwork, info )
      character          jobvs, sort
      integer            info, lda, ldvs, lwork, n, sdim
      logical            bwork( * )
      real               a( lda, * ), vs( ldvs, * ), wi( * ), work( * ),&
     &wr( * )
      logical            select
      external           select
      END
      END INTERFACE

      INTERFACE
      subroutine sgeesx( jobvs, sort, select, sense, n, a, lda, sdim,   &
     &wr, wi, vs, ldvs, rconde, rcondv, work, lwork,                    &
     &iwork, liwork, bwork, info )
      character          jobvs, sense, sort
      integer            info, lda, ldvs, liwork, lwork, n, sdim
      real               rconde, rcondv
      logical            bwork( * )
      integer            iwork( * )
      real               a( lda, * ), vs( ldvs, * ), wi( * ), work( * ),&
     &wr( * )
      logical            select
      external           select
      END
      END INTERFACE

      INTERFACE
      subroutine sgeev( jobvl, jobvr, n, a, lda, wr, wi, vl, ldvl, vr,  &
     &ldvr, work, lwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldvl, ldvr, lwork, n
      real               a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &wi( * ), work( * ), wr( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgeevx( balanc, jobvl, jobvr, sense, n, a, lda, wr, wi,&
     &vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm,                       &
     &rconde, rcondv, work, lwork, iwork, info )
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldvl, ldvr, lwork, n
      real               abnrm
      integer            iwork( * )
      real               a( lda, * ), rconde( * ), rcondv( * ),         &
     &scale( * ), vl( ldvl, * ), vr( ldvr, * ),                         &
     &wi( * ), work( * ), wr( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgegs( jobvsl, jobvsr, n, a, lda, b, ldb, alphar,      &
     &alphai, beta, vsl, ldvsl, vsr, ldvsr, work,                       &
     &lwork, info )
      character          jobvsl, jobvsr
      integer            info, lda, ldb, ldvsl, ldvsr, lwork, n
      real               a( lda, * ), alphai( * ), alphar( * ),         &
     &b( ldb, * ), beta( * ), vsl( ldvsl, * ),                          &
     &vsr( ldvsr, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgegv( jobvl, jobvr, n, a, lda, b, ldb, alphar, alphai,&
     &beta, vl, ldvl, vr, ldvr, work, lwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldb, ldvl, ldvr, lwork, n
      real               a( lda, * ), alphai( * ), alphar( * ),         &
     &b( ldb, * ), beta( * ), vl( ldvl, * ),                            &
     &vr( ldvr, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgehd2( n, ilo, ihi, a, lda, tau, work, info )
      integer            ihi, ilo, info, lda, n
      real               a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgehrd( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sgelq2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      real               a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgelqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sgels( trans, m, n, nrhs, a, lda, b, ldb, work, lwork, &
     &info )
      character          trans
      integer            info, lda, ldb, lwork, m, n, nrhs
      real               a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sgelss( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,    &
     &work, lwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      real               a( lda, * ), b( ldb, * ), s( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgelsd( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,    &
     &work, lwork, iwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      integer            iwork( * ) 
      real               a( lda, * ), b( ldb, * ), s( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgelsx( m, n, nrhs, a, lda, b, ldb, jpvt, rcond, rank, &
     &work, info )
      integer            info, lda, ldb, m, n, nrhs, rank
      real               rcond
      integer            jpvt( * )
      real               a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgeql2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      real               a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgeqlf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sgeqr2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      real               a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgeqrf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sgerfs( trans, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, iwork, info )
      character          trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgerq2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      real               a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgerqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sgesv( n, nrhs, a, lda, ipiv, b, ldb, info )
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      real               a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgesvd( jobu, jobvt, m, n, a, lda, s, u, ldu, vt, ldvt, &
     &work, lwork, info )
      character          jobu, jobvt
      integer            info, lda, ldu, ldvt, lwork, m, n
      real               a( lda, * ), s( * ), u( ldu, * ),              &
     &vt( ldvt, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgesvx( fact, trans, n, nrhs, a, lda, af, ldaf, ipiv,  &
     &equed, r, c, b, ldb, x, ldx, rcond, ferr, berr,                   &
     &work, iwork, info )
      character          equed, fact, trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * ), iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), c( * ), ferr( * ), r( * ),                             &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgetf2( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      real               a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgetrf( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      real               a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgetri( n, a, lda, ipiv, work, lwork, info )
      integer            info, lda, lwork, n
      integer            ipiv( * )
      real               a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sgetrs( trans, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          trans
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      real               a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sggbak( job, side, n, ilo, ihi, lscale, rscale, m, v,  &
     &ldv, info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      real               lscale( * ), rscale( * ), v( ldv, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sggbal( job, n, a, lda, b, ldb, ilo, ihi, lscale,      &
     &rscale, work, info )
      character          job
      integer            ihi, ilo, info, lda, ldb, n
      real               a( lda, * ), b( ldb, * ), lscale( * ),         &
     &rscale( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sggglm( n, m, p, a, lda, b, ldb, d, x, y, work, lwork, &
     &info )
      integer            info, lda, ldb, lwork, m, n, p
      real               a( lda, * ), b( ldb, * ), d( * ), work( * ),   &
     &x( * ), y( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgghrd( compq, compz, n, ilo, ihi, a, lda, b, ldb, q,  &
     &ldq, z, ldz, info )
      character          compq, compz
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, n
      real               a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgglse( m, n, p, a, lda, b, ldb, c, d, x, work, lwork, &
     &info )
      integer            info, lda, ldb, lwork, m, n, p
      real               a( lda, * ), b( ldb, * ), c( * ), d( * ),      &
     &work( * ), x( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sggqrf( n, m, p, a, lda, taua, b, ldb, taub, work,     &
     &lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      real               a( lda, * ), b( ldb, * ), taua( * ), taub( * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sggrqf( m, p, n, a, lda, taua, b, ldb, taub, work,     &
     &lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      real               a( lda, * ), b( ldb, * ), taua( * ), taub( * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sggsvd( jobu, jobv, jobq, m, n, p, k, l, a, lda, b,    &
     &ldb, alpha, beta, u, ldu, v, ldv, q, ldq,                         &
     &work, iwork, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n, p
      integer            iwork( * )
      real               a( lda, * ), alpha( * ), b( ldb, * ),          &
     &beta( * ), q( ldq, * ), u( ldu, * ),                              &
     &v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sggsvp( jobu, jobv, jobq, m, p, n, a, lda, b, ldb,     &
     &tola, tolb, k, l, u, ldu, v, ldv, q, ldq,                         &
     &iwork, tau, work, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n, p
      real               tola, tolb
      integer            iwork( * )
      real               a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &tau( * ), u( ldu, * ), v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgtcon( norm, n, dl, d, du, du2, ipiv, anorm, rcond,   &
     &work, iwork, info )
      character          norm
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * ), iwork( * )
      real               d( * ), dl( * ), du( * ), du2( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgtrfs( trans, n, nrhs, dl, d, du, dlf, df, duf, du2,  &
     &ipiv, b, ldb, x, ldx, ferr, berr, work, iwork,                    &
     &info )
      character          trans
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               b( ldb, * ), berr( * ), d( * ), df( * ),       &
     &dl( * ), dlf( * ), du( * ), du2( * ), duf( * ),                   &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgtsv( n, nrhs, dl, d, du, b, ldb, info )
      integer            info, ldb, n, nrhs
      real               b( ldb, * ), d( * ), dl( * ), du( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgtsvx( fact, trans, n, nrhs, dl, d, du, dlf, df, duf, &
     &du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr,                     &
     &work, iwork, info )
      character          fact, trans
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * ), iwork( * )
      real               b( ldb, * ), berr( * ), d( * ), df( * ),       &
     &dl( * ), dlf( * ), du( * ), du2( * ), duf( * ),                   &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgttrf( n, dl, d, du, du2, ipiv, info )
      integer            info, n
      integer            ipiv( * )
      real               d( * ), dl( * ), du( * ), du2( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sgttrs( trans, n, nrhs, dl, d, du, du2, ipiv, b, ldb,  &
     &info )
      character          trans
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      real               b( ldb, * ), d( * ), dl( * ), du( * ), du2( * )
      END
      END INTERFACE

      INTERFACE
      subroutine shgeqz( job, compq, compz, n, ilo, ihi, a, lda, b, ldb, &
     &alphar, alphai, beta, q, ldq, z, ldz, work,                       &
     &lwork, info )
      character          compq, compz, job
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, lwork, n
      real               a( lda, * ), alphai( * ), alphar( * ),         &
     &b( ldb, * ), beta( * ), q( ldq, * ), work( * ),                   &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine shsein( side, eigsrc, initv, select, n, h, ldh, wr, wi, &
     &vl, ldvl, vr, ldvr, mm, m, work, ifaill,                          &
     &ifailr, info )
      character          eigsrc, initv, side
      integer            info, ldh, ldvl, ldvr, m, mm, n
      logical            select( * )
      integer            ifaill( * ), ifailr( * )
      real               h( ldh, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &wi( * ), work( * ), wr( * )
      END
      END INTERFACE

      INTERFACE
      subroutine shseqr( job, compz, n, ilo, ihi, h, ldh, wr, wi, z,    &
     &ldz, work, lwork, info )
      character          compz, job
      integer            ihi, ilo, info, ldh, ldz, lwork, n
      real               h( ldh, * ), wi( * ), work( * ), wr( * ),      &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine slabad( small, large )
      real               small
      real               large
      END
      END INTERFACE

      INTERFACE
      subroutine slaed0( icompq, qsiz, n, d, e, q, ldq, qstore, ldqs,   &
     &work, iwork, info )
      integer            icompq, info, ldq, ldqs, n, qsiz
      integer            iwork( * )
      real               d( * ), e( * ), q( ldq, * ), qstore( ldqs, * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slaed1( n, d, q, ldq, indxq, rho, cutpnt, work, iwork, &
     &info )
      integer            cutpnt, info, ldq, n
      real               rho
      integer            indxq( * ), iwork( * )
      real               d( * ), q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slaed2( k, n, d, q, ldq, indxq, rho, cutpnt, z, dlamda, &
     &q2, ldq2, indxc, w, indxp, indx, coltyp, info )
      integer            cutpnt, info, k, ldq, ldq2, n
      real               rho
      integer            coltyp( * ), indx( * ), indxc( * ), indxp( * ), &
     &indxq( * )
      real               d( * ), dlamda( * ), q( ldq, * ),              &
     &q2( ldq2, * ), w( * ), z( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slaed3( k, kstart, kstop, n, d, q, ldq, rho, cutpnt,   &
     &dlamda, q2, ldq2, indxc, ctot, w, s, lds,                         &
     &info )
      integer            cutpnt, info, k, kstart, kstop, ldq, ldq2, lds, &
     &n
      real               rho
      integer            ctot( * ), indxc( * )
      real               d( * ), dlamda( * ), q( ldq, * ),              &
     &q2( ldq2, * ), s( lds, * ), w( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slaed4( n, i, d, z, delta, rho, dlam, info )
      integer            i, info, n
      real               dlam, rho
      real               d( * ), delta( * ), z( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slaed5( i, d, z, delta, rho, dlam )
      integer            i
      real               dlam, rho
      real               d( 2 ), delta( 2 ), z( 2 )
      END
      END INTERFACE

      INTERFACE
      subroutine slaed6( kniter, orgati, rho, d, z, finit, tau, info )
      logical            orgati
      integer            info, kniter
      real               finit, rho, tau
      real               d( 3 ), z( 3 )
      END
      END INTERFACE

      INTERFACE
      subroutine slaed7( icompq, n, qsiz, tlvls, curlvl, curpbm, d, q,  &
     &ldq, indxq, rho, cutpnt, qstore, qptr, prmptr,                    &
     &perm, givptr, givcol, givnum, work, iwork,                        &
     &info )
      integer            curlvl, curpbm, cutpnt, icompq, info, ldq, n,  &
     &qsiz, tlvls
      real               rho
      integer            givcol( 2, * ), givptr( * ), indxq( * ),       &
     &iwork( * ), perm( * ), prmptr( * ), qptr( * )
      real               d( * ), givnum( 2, * ), q( ldq, * ),           &
     &qstore( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slaed8( icompq, k, n, qsiz, d, q, ldq, indxq, rho,     &
     &cutpnt, z, dlamda, q2, ldq2, w, perm, givptr,                     &
     &givcol, givnum, indxp, indx, info )
      integer            cutpnt, givptr, icompq, info, k, ldq, ldq2, n, &
     &qsiz
      real               rho
      integer            givcol( 2, * ), indx( * ), indxp( * ),         &
     &indxq( * ), perm( * )
      real               d( * ), dlamda( * ), givnum( 2, * ),           &
     &q( ldq, * ), q2( ldq2, * ), w( * ), z( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slaed9( k, kstart, kstop, n, d, q, ldq, rho, dlamda, w, &
     &s, lds, info )
      integer            info, k, kstart, kstop, ldq, lds, n
      real               rho
      real               d( * ), dlamda( * ), q( ldq, * ), s( lds, * ), &
     &w( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slaeda( n, tlvls, curlvl, curpbm, prmptr, perm, givptr, &
     &givcol, givnum, q, qptr, z, ztemp, info )
      integer            curlvl, curpbm, info, n, tlvls
      integer            givcol( 2, * ), givptr( * ), perm( * ),        &
     &prmptr( * ), qptr( * )
      real               givnum( 2, * ), q( * ), z( * ), ztemp( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slagtf( n, a, lambda, b, c, tol, d, in, info )
      integer            info, n
      real               lambda, tol
      integer            in( * )
      real               a( * ), b( * ), c( * ), d( * )
      END
      END INTERFACE

      INTERFACE
      function slamch( cmach )
      real               slamch
      character          cmach
      END
      END INTERFACE

      INTERFACE
      subroutine slamc1( beta, t, rnd, ieee1 )
      integer            beta
      integer            t
      logical            rnd
      logical            ieee1
      END
      END INTERFACE

      INTERFACE
      subroutine slamc2( beta, t, rnd, eps, emin, rmin, emax, rmax )
      integer            beta
      integer            t
      logical            rnd
      real               eps
      integer            emin
      real               rmin
      integer            emax
      real               rmax
      END
      END INTERFACE

      INTERFACE
      function slamc3( a, b )
      real               a
      real               b
      real               slamc3
      END
      END INTERFACE

      INTERFACE
      subroutine slamc4( emin, start, base )
      integer            emin
      real               start
      integer            base
      END
      END INTERFACE

      INTERFACE
      subroutine slamc5( beta, p, emin, ieee, emax, rmax )
      integer            beta
      integer            p
      integer            emin
      logical            ieee
      integer            emax
      real               rmax
      END
      END INTERFACE

      INTERFACE
      subroutine slamrg( n1, n2, a, strd1, strd2, index )
      integer            n1, n2, strd1, strd2
      integer            index( * )
      real               a( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slasq1( n, d, e, work, info )
      integer            info, n
      real               d( * ), e( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slasq2( m, q, e, qq, ee, eps, tol2, small2, sup, kend, &
     &info )
      integer            info, kend, m
      real               eps, small2, sup, tol2
      real               e( * ), ee( * ), q( * ), qq( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slasq3( n, q, e, qq, ee, sup, sigma, kend, off, iphase, &
     &iconv, eps, tol2, small2 )
      integer            iconv, iphase, kend, n, off
      real               eps, sigma, small2, sup, tol2
      real               e( * ), ee( * ), q( * ), qq( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slasq4( n, q, e, tau, sup )
      integer            n
      real               sup, tau
      real               e( * ), q( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slasrt( id, n, d, info )
      character          id
      integer            info, n
      real               d( * )
      END
      END INTERFACE

      INTERFACE
      subroutine slasyf( uplo, n, nb, kb, a, lda, ipiv, w, ldw, info )
      character          uplo
      integer            info, kb, lda, ldw, n, nb
      integer            ipiv( * )
      real               a( lda, * ), w( ldw, * )
      END
      END INTERFACE

      INTERFACE
      subroutine slatzm( side, m, n, v, incv, tau, c1, c2, ldc, work )
      character          side
      integer            incv, ldc, m, n
      real               tau
      real               c1( ldc, * ), c2( ldc, * ), v( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sopgtr( uplo, n, ap, tau, q, ldq, work, info )
      character          uplo
      integer            info, ldq, n
      real               ap( * ), q( ldq, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sopmtr( side, uplo, trans, m, n, ap, tau, c, ldc, work, &
     &info )
      character          side, trans, uplo
      integer            info, ldc, m, n
      real               ap( * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sorg2l( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      real               a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sorg2r( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      real               a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sorgbr( vect, m, n, k, a, lda, tau, work, lwork, info )
      character          vect
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sorghr( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sorgl2( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      real               a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sorglq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sorgql( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sorgqr( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sorgr2( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      real               a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sorgrq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sorgtr( uplo, n, a, lda, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      real               a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sorm2l( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sorm2r( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sormbr( vect, side, trans, m, n, k, a, lda, tau, c,    &
     &ldc, work, lwork, info )
      character          side, trans, vect
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sormhr( side, trans, m, n, ilo, ihi, a, lda, tau, c,   &
     &ldc, work, lwork, info )
      character          side, trans
      integer            ihi, ilo, info, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sorml2( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sormlq( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sormql( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sormqr( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sormr2( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sormrq( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine sormtr( side, uplo, trans, m, n, a, lda, tau, c, ldc,  &
     &work, lwork, info )
      character          side, trans, uplo
      integer            info, lda, ldc, lwork, m, n
      real               a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine spbcon( uplo, n, kd, ab, ldab, anorm, rcond, work,     &
     &iwork, info )
      character          uplo
      integer            info, kd, ldab, n
      real               anorm, rcond
      integer            iwork( * )
      real               ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine spbequ( uplo, n, kd, ab, ldab, s, scond, amax, info )
      character          uplo
      integer            info, kd, ldab, n
      real               amax, scond
      real               ab( ldab, * ), s( * )
      END
      END INTERFACE

      INTERFACE
      subroutine spbrfs( uplo, n, kd, nrhs, ab, ldab, afb, ldafb, b,    &
     &ldb, x, ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spbstf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      real               ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spbsv( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      real               ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spbsvx( fact, uplo, n, kd, nrhs, ab, ldab, afb, ldafb, &
     &equed, s, b, ldb, x, ldx, rcond, ferr, berr,                      &
     &work, iwork, info )
      character          equed, fact, uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      real               rcond
      integer            iwork( * )
      real               ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &berr( * ), ferr( * ), s( * ), work( * ),                          &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spbtf2( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      real               ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spbtrf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      real               ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spbtrs( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      real               ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spocon( uplo, n, a, lda, anorm, rcond, work, iwork,    &
     &info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      integer            iwork( * )
      real               a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine spoequ( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      real               amax, scond
      real               a( lda, * ), s( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sporfs( uplo, n, nrhs, a, lda, af, ldaf, b, ldb, x,    &
     &ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sposv( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      real               a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sposvx( fact, uplo, n, nrhs, a, lda, af, ldaf, equed,  &
     &s, b, ldb, x, ldx, rcond, ferr, berr, work,                       &
     &iwork, info )
      character          equed, fact, uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      real               rcond
      integer            iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), s( * ), work( * ),                          &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spotf2( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      real               a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spotrf( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      real               a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spotri( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      real               a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spotrs( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      real               a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sppcon( uplo, n, ap, anorm, rcond, work, iwork, info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      integer            iwork( * )
      real               ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sppequ( uplo, n, ap, s, scond, amax, info )
      character          uplo
      integer            info, n
      real               amax, scond
      real               ap( * ), s( * )
      END
      END INTERFACE

      INTERFACE
      subroutine spprfs( uplo, n, nrhs, ap, afp, b, ldb, x, ldx, ferr,  &
     &berr, work, iwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               afp( * ), ap( * ), b( ldb, * ), berr( * ),     &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sppsv( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      real               ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sppsvx( fact, uplo, n, nrhs, ap, afp, equed, s, b, ldb, &
     &x, ldx, rcond, ferr, berr, work, iwork, info )
      character          equed, fact, uplo
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            iwork( * )
      real               afp( * ), ap( * ), b( ldb, * ), berr( * ),     &
     &ferr( * ), s( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spptrf( uplo, n, ap, info )
      character          uplo
      integer            info, n
      real               ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine spptri( uplo, n, ap, info )
      character          uplo
      integer            info, n
      real               ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine spptrs( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      real               ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sptcon( n, d, e, anorm, rcond, work, info )
      integer            info, n
      real               anorm, rcond
      real               d( * ), e( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine spteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sptrfs( n, nrhs, d, e, df, ef, b, ldb, x, ldx, ferr,   &
     &berr, work, info )
      integer            info, ldb, ldx, n, nrhs
      real               b( ldb, * ), berr( * ), d( * ), df( * ),       &
     &e( * ), ef( * ), ferr( * ), work( * ),                            &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sptsv( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      real               b( ldb, * ), d( * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sptsvx( fact, n, nrhs, d, e, df, ef, b, ldb, x, ldx,   &
     &rcond, ferr, berr, work, info )
      character          fact
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      real               b( ldb, * ), berr( * ), d( * ), df( * ),       &
     &e( * ), ef( * ), ferr( * ), work( * ),                            &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine spttrf( n, d, e, info )
      integer            info, n
      real               d( * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine spttrs( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      real               b( ldb, * ), d( * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssbev( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,   &
     &info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, n
      real               ab( ldab, * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssbevd( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,  &
     &lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, liwork, lwork, n
      integer            iwork( * )
      real               ab( ldab, * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssbevx( jobz, range, uplo, n, kd, ab, ldab, q, ldq, vl, &
     &vu, il, iu, abstol, m, w, z, ldz, work, iwork,                    &
     &ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, kd, ldab, ldq, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               ab( ldab, * ), q( ldq, * ), w( * ), work( * ), &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssbgst( vect, uplo, n, ka, kb, ab, ldab, bb, ldbb, x,  &
     &ldx, work, info )
      character          uplo, vect
      integer            info, ka, kb, ldab, ldbb, ldx, n
      real               ab( ldab, * ), bb( ldbb, * ), work( * ),       &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssbgv( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w, z, &
     &ldz, work, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, n
      real               ab( ldab, * ), bb( ldbb, * ), w( * ),          &
     &work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssbtrd( vect, uplo, n, kd, ab, ldab, d, e, q, ldq,     &
     &work, info )
      character          uplo, vect
      integer            info, kd, ldab, ldq, n
      real               ab( ldab, * ), d( * ), e( * ), q( ldq, * ),    &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sspcon( uplo, n, ap, ipiv, anorm, rcond, work, iwork,  &
     &info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * ), iwork( * )
      real               ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sspev( jobz, uplo, n, ap, w, z, ldz, work, info )
      character          jobz, uplo
      integer            info, ldz, n
      real               ap( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sspevd( jobz, uplo, n, ap, w, z, ldz, work, lwork,     &
     &iwork, liwork, info )
      character          jobz, uplo
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      real               ap( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sspevx( jobz, range, uplo, n, ap, vl, vu, il, iu,      &
     &abstol, m, w, z, ldz, work, iwork, ifail,                         &
     &info )
      character          jobz, range, uplo
      integer            il, info, iu, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               ap( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sspgst( itype, uplo, n, ap, bp, info )
      character          uplo
      integer            info, itype, n
      real               ap( * ), bp( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sspgv( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,  &
     &info )
      character          jobz, uplo
      integer            info, itype, ldz, n
      real               ap( * ), bp( * ), w( * ), work( * ),           &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,  &
     &ferr, berr, work, iwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               afp( * ), ap( * ), b( ldb, * ), berr( * ),     &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sspsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      real               ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sspsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, &
     &ldx, rcond, ferr, berr, work, iwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * ), iwork( * )
      real               afp( * ), ap( * ), b( ldb, * ), berr( * ),     &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssptrd( uplo, n, ap, d, e, tau, info )
      character          uplo
      integer            info, n
      real               ap( * ), d( * ), e( * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      real               ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      real               ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      real               ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sstebz( range, order, n, vl, vu, il, iu, abstol, d, e, &
     &m, nsplit, w, iblock, isplit, work, iwork,                        &
     &info )
      character          order, range
      integer            il, info, iu, m, n, nsplit
      real               abstol, vl, vu
      integer            iblock( * ), isplit( * ), iwork( * )
      real               d( * ), e( * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sstedc( compz, n, d, e, z, ldz, work, lwork, iwork,    &
     &liwork, info )
      character          compz
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      real               d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sstein( n, d, e, m, w, iblock, isplit, z, ldz, work,   &
     &iwork, ifail, info )
      integer            info, ldz, m, n
      integer            iblock( * ), ifail( * ), isplit( * ),          &
     &iwork( * )
      real               d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssterf( n, d, e, info )
      integer            info, n
      real               d( * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine sstev( jobz, n, d, e, z, ldz, work, info )
      character          jobz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sstevd( jobz, n, d, e, z, ldz, work, lwork, iwork,     &
     &liwork, info )
      character          jobz
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      real               d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine sstevx( jobz, range, n, d, e, vl, vu, il, iu, abstol,  &
     &m, w, z, ldz, work, iwork, ifail, info )
      character          jobz, range
      integer            il, info, iu, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssycon( uplo, n, a, lda, ipiv, anorm, rcond, work,     &
     &iwork, info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      integer            ipiv( * ), iwork( * )
      real               a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssyev( jobz, uplo, n, a, lda, w, work, lwork, info )
      character          jobz, uplo
      integer            info, lda, lwork, n
      real               a( lda, * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssyevd( jobz, uplo, n, a, lda, w, work, lwork, iwork,  &
     &liwork, info )
      character          jobz, uplo
      integer            info, lda, liwork, lwork, n
      integer            iwork( * )
      real               a( lda, * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssyevx( jobz, range, uplo, n, a, lda, vl, vu, il, iu,  &
     &abstol, m, w, z, ldz, work, lwork, iwork,                         &
     &ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, lwork, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               a( lda, * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssygs2( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      real               a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssygst( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      real               a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssygv( itype, jobz, uplo, n, a, lda, b, ldb, w, work,  &
     &lwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, lwork, n
      real               a( lda, * ), b( ldb, * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssyrdb( jobz, uplo, n, kd, a, lda, d, e, tau,          &
     &z, ldz, work, lwork, info )
      character          jobz, uplo
      integer            kd, info, lda, ldz, lwork, n
      real               a( lda, * ), d( * ), e( * ), tau( * ),         &
     &work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssyrfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssysv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,      &
     &lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      real               a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine ssysvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, &
     &ldb, x, ldx, rcond, ferr, berr, work, lwork,                      &
     &iwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      real               rcond
      integer            ipiv( * ), iwork( * )
      real               a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssytd2( uplo, n, a, lda, d, e, tau, info )
      character          uplo
      integer            info, lda, n
      real               a( lda, * ), d( * ), e( * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssytf2( uplo, n, a, lda, ipiv, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      real               a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssytrd( uplo, n, a, lda, d, e, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      real               a( lda, * ), d( * ), e( * ), tau( * ),         &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssytrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      real               a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine ssytri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      real               a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ssytrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      real               a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine stbcon( norm, uplo, diag, n, kd, ab, ldab, rcond, work, &
     &iwork, info )
      character          diag, norm, uplo
      integer            info, kd, ldab, n
      real               rcond
      integer            iwork( * )
      real               ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine stbrfs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,   &
     &ldb, x, ldx, ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               ab( ldab, * ), b( ldb, * ), berr( * ),         &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine stbtrs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,   &
     &ldb, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, n, nrhs
      real               ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine stgevc( side, howmny, select, n, a, lda, b, ldb, vl,   &
     &ldvl, vr, ldvr, mm, m, work, info )
      character          howmny, side
      integer            info, lda, ldb, ldvl, ldvr, m, mm, n
      logical            select( * )
      real               a( lda, * ), b( ldb, * ), vl( ldvl, * ),       &
     &vr( ldvr, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine stgsja( jobu, jobv, jobq, m, p, n, k, l, a, lda, b,    &
     &ldb, tola, tolb, alpha, beta, u, ldu, v, ldv,                     &
     &q, ldq, work, ncycle, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n,     &
     &ncycle, p
      real               tola, tolb
      real               alpha( * ), beta( * ), a( lda, * ),            &
     &b( ldb, * ), q( ldq, * ), u( ldu, * ),                            &
     &v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine stpcon( norm, uplo, diag, n, ap, rcond, work, iwork,   &
     &info )
      character          diag, norm, uplo
      integer            info, n
      real               rcond
      integer            iwork( * )
      real               ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine stprfs( uplo, trans, diag, n, nrhs, ap, b, ldb, x, ldx, &
     &ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               ap( * ), b( ldb, * ), berr( * ), ferr( * ),    &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine stptri( uplo, diag, n, ap, info )
      character          diag, uplo
      integer            info, n
      real               ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine stptrs( uplo, trans, diag, n, nrhs, ap, b, ldb, info )
      character          diag, trans, uplo
      integer            info, ldb, n, nrhs
      real               ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine strcon( norm, uplo, diag, n, a, lda, rcond, work,      &
     &iwork, info )
      character          diag, norm, uplo
      integer            info, lda, n
      real               rcond
      integer            iwork( * )
      real               a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine strevc( side, howmny, select, n, t, ldt, vl, ldvl, vr, &
     &ldvr, mm, m, work, info )
      character          howmny, side
      integer            info, ldt, ldvl, ldvr, m, mm, n
      logical            select( * )
      real               t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine strexc( compq, n, t, ldt, q, ldq, ifst, ilst, work,    &
     &info )
      character          compq
      integer            ifst, ilst, info, ldq, ldt, n
      real               q( ldq, * ), t( ldt, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine strrfs( uplo, trans, diag, n, nrhs, a, lda, b, ldb, x, &
     &ldx, ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, lda, ldb, ldx, n, nrhs
      integer            iwork( * )
      real               a( lda, * ), b( ldb, * ), berr( * ), ferr( * ), &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine strsen( job, compq, select, n, t, ldt, q, ldq, wr, wi, &
     &m, s, sep, work, lwork, iwork, liwork, info )
      character          compq, job
      integer            info, ldq, ldt, liwork, lwork, m, n
      real               s, sep
      logical            select( * )
      integer            iwork( * )
      real               q( ldq, * ), t( ldt, * ), wi( * ), work( * ),  &
     &wr( * )
      END
      END INTERFACE

      INTERFACE
      subroutine strsna( job, howmny, select, n, t, ldt, vl, ldvl, vr,  &
     &ldvr, s, sep, mm, m, work, ldwork, iwork,                         &
     &info )
      character          howmny, job
      integer            info, ldt, ldvl, ldvr, ldwork, m, mm, n
      logical            select( * )
      integer            iwork( * )
      real               s( * ), sep( * ), t( ldt, * ), vl( ldvl, * ),  &
     &vr( ldvr, * ), work( ldwork, * )
      END
      END INTERFACE

      INTERFACE
      subroutine strsyl( trana, tranb, isgn, m, n, a, lda, b, ldb, c,   &
     &ldc, scale, info )
      character          trana, tranb
      integer            info, isgn, lda, ldb, ldc, m, n
      real               scale
      real               a( lda, * ), b( ldb, * ), c( ldc, * )
      END
      END INTERFACE

      INTERFACE
      subroutine strti2( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      real               a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine strtri( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      real               a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine strtrs( uplo, trans, diag, n, nrhs, a, lda, b, ldb,    &
     &info )
      character          diag, trans, uplo
      integer            info, lda, ldb, n, nrhs
      real               a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine stzrqf( m, n, a, lda, tau, info )
      integer            info, lda, m, n
      real               a( lda, * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cbdsqr( uplo, n, ncvt, nru, ncc, d, e, vt, ldvt, u,    &
     &ldu, c, ldc, rwork, info )
      character          uplo
      integer            info, ldc, ldu, ldvt, n, ncc, ncvt, nru
      real               d( * ), e( * ), rwork( * )
      complex            c( ldc, * ), u( ldu, * ), vt( ldvt, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgbbrd( vect, m, n, ncc, kl, ku, ab, ldab, d, e, q,    &
     &ldq, pt, ldpt, c, ldc, work, rwork, info )
      character          vect
      integer            info, kl, ku, ldab, ldc, ldpt, ldq, m, n, ncc
      real               d( * ), e( * ), rwork( * )
      complex            ab( ldab, * ), c( ldc, * ), pt( ldpt, * ),     &
     &q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgbcon( norm, n, kl, ku, ab, ldab, ipiv, anorm, rcond, &
     &work, rwork, info )
      character          norm
      integer            info, kl, ku, ldab, n
      real               anorm, rcond
      integer            ipiv( * )
      real               rwork( * )
      complex            ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgbequ( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,  &
     &amax, info )
      integer            info, kl, ku, ldab, m, n
      real               amax, colcnd, rowcnd
      real               c( * ), r( * )
      complex            ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgbrfs( trans, n, kl, ku, nrhs, ab, ldab, afb, ldafb,  &
     &ipiv, b, ldb, x, ldx, ferr, berr, work, rwork,                    &
     &info )
      character          trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgbsv( n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, info )
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      complex            ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgbsvx( fact, trans, n, kl, ku, nrhs, ab, ldab, afb,   &
     &ldafb, ipiv, equed, r, c, b, ldb, x, ldx,                         &
     &rcond, ferr, berr, work, rwork, info )
      character          equed, fact, trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), c( * ), ferr( * ), r( * ),          &
     &rwork( * )
      complex            ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgbtf2( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      complex            ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgbtrf( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      complex            ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgbtrs( trans, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, &
     &info )
      character          trans
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      complex            ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgebak( job, side, n, ilo, ihi, scale, m, v, ldv,      &
     &info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      real               scale( * )
      complex            v( ldv, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgebal( job, n, a, lda, ilo, ihi, scale, info )
      character          job
      integer            ihi, ilo, info, lda, n
      real               scale( * )
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgebd2( m, n, a, lda, d, e, tauq, taup, work, info )
      integer            info, lda, m, n
      real               d( * ), e( * )
      complex            a( lda, * ), taup( * ), tauq( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgebrd( m, n, a, lda, d, e, tauq, taup, work, lwork,   &
     &info )
      integer            info, lda, lwork, m, n
      real               d( * ), e( * )
      complex            a( lda, * ), taup( * ), tauq( * ),             &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cgecon( norm, n, a, lda, anorm, rcond, work, rwork,    &
     &info )
      character          norm
      integer            info, lda, n
      real               anorm, rcond
      real               rwork( * )
      complex            a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgeequ( m, n, a, lda, r, c, rowcnd, colcnd, amax,      &
     &info )
      integer            info, lda, m, n
      real               amax, colcnd, rowcnd
      real               c( * ), r( * )
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgees( jobvs, sort, select, n, a, lda, sdim, w, vs,    &
     &ldvs, work, lwork, rwork, bwork, info )
      character          jobvs, sort
      integer            info, lda, ldvs, lwork, n, sdim
      logical            bwork( * )
      real               rwork( * )
      complex            a( lda, * ), vs( ldvs, * ), w( * ), work( * )
      logical            select
      external           select
      END
      END INTERFACE

      INTERFACE
      subroutine cgeesx( jobvs, sort, select, sense, n, a, lda, sdim, w, &
     &vs, ldvs, rconde, rcondv, work, lwork, rwork,                     &
     &bwork, info )
      character          jobvs, sense, sort
      integer            info, lda, ldvs, lwork, n, sdim
      real               rconde, rcondv
      logical            bwork( * )
      real               rwork( * )
      complex            a( lda, * ), vs( ldvs, * ), w( * ), work( * )
      logical            select
      external           select
      END
      END INTERFACE

      INTERFACE
      subroutine cgeev( jobvl, jobvr, n, a, lda, w, vl, ldvl, vr, ldvr, &
     &work, lwork, rwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldvl, ldvr, lwork, n
      real               rwork( * )
      complex            a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgeevx( balanc, jobvl, jobvr, sense, n, a, lda, w, vl, &
     &ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde,                   &
     &rcondv, work, lwork, rwork, info )
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldvl, ldvr, lwork, n
      real               abnrm
      real               rconde( * ), rcondv( * ), rwork( * ),          &
     &scale( * )
      complex            a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgegs( jobvsl, jobvsr, n, a, lda, b, ldb, alpha, beta, &
     &vsl, ldvsl, vsr, ldvsr, work, lwork, rwork,                       &
     &info )
      character          jobvsl, jobvsr
      integer            info, lda, ldb, ldvsl, ldvsr, lwork, n
      real               rwork( * )
      complex            a( lda, * ), alpha( * ), b( ldb, * ),          &
     &beta( * ), vsl( ldvsl, * ), vsr( ldvsr, * ),                      &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgegv( jobvl, jobvr, n, a, lda, b, ldb, alpha, beta,   &
     &vl, ldvl, vr, ldvr, work, lwork, rwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldb, ldvl, ldvr, lwork, n
      real               rwork( * )
      complex            a( lda, * ), alpha( * ), b( ldb, * ),          &
     &beta( * ), vl( ldvl, * ), vr( ldvr, * ),                          &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgehd2( n, ilo, ihi, a, lda, tau, work, info )
      integer            ihi, ilo, info, lda, n
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgehrd( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cgelq2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgelqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cgels( trans, m, n, nrhs, a, lda, b, ldb, work, lwork, &
     &info )
      character          trans
      integer            info, lda, ldb, lwork, m, n, nrhs
      complex            a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cgelss( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,    &
     &work, lwork, rwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      real               rwork( * ), s( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgelsd( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,    &
     &work, lwork, rwork, iwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      real               rcond
      integer            iwork( * )
      real               rwork( * ), s( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgelsx( m, n, nrhs, a, lda, b, ldb, jpvt, rcond, rank, &
     &work, rwork, info )
      integer            info, lda, ldb, m, n, nrhs, rank
      real               rcond
      integer            jpvt( * )
      real               rwork( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgeql2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgeqlf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cgeqr2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgeqrf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cgerfs( trans, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, rwork, info )
      character          trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgerq2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgerqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cgesv( n, nrhs, a, lda, ipiv, b, ldb, info )
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgesvd( jobu, jobvt, m, n, a, lda, s, u, ldu, vt, ldvt, &
     &work, lwork, rwork, info )
      character          jobu, jobvt
      integer            info, lda, ldu, ldvt, lwork, m, n
      real               rwork( * ), s( * )
      complex            a( lda, * ), u( ldu, * ), vt( ldvt, * ),       &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgesvx( fact, trans, n, nrhs, a, lda, af, ldaf, ipiv,  &
     &equed, r, c, b, ldb, x, ldx, rcond, ferr, berr,                   &
     &work, rwork, info )
      character          equed, fact, trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), c( * ), ferr( * ), r( * ),          &
     &rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgetf2( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgetrf( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgetri( n, a, lda, ipiv, work, lwork, info )
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex            a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cgetrs( trans, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          trans
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cggbak( job, side, n, ilo, ihi, lscale, rscale, m, v,  &
     &ldv, info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      real               lscale( * ), rscale( * )
      complex            v( ldv, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cggbal( job, n, a, lda, b, ldb, ilo, ihi, lscale,      &
     &rscale, work, info )
      character          job
      integer            ihi, ilo, info, lda, ldb, n
      real               lscale( * ), rscale( * ), work( * )
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cggglm( n, m, p, a, lda, b, ldb, d, x, y, work, lwork, &
     &info )
      integer            info, lda, ldb, lwork, m, n, p
      complex            a( lda, * ), b( ldb, * ), d( * ), work( * ),   &
     &x( * ), y( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgghrd( compq, compz, n, ilo, ihi, a, lda, b, ldb, q,  &
     &ldq, z, ldz, info )
      character          compq, compz
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, n
      complex            a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgglse( m, n, p, a, lda, b, ldb, c, d, x, work, lwork, &
     &info )
      integer            info, lda, ldb, lwork, m, n, p
      complex            a( lda, * ), b( ldb, * ), c( * ), d( * ),      &
     &work( * ), x( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cggqrf( n, m, p, a, lda, taua, b, ldb, taub, work,     &
     &lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      complex            a( lda, * ), b( ldb, * ), taua( * ), taub( * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cggrqf( m, p, n, a, lda, taua, b, ldb, taub, work,     &
     &lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      complex            a( lda, * ), b( ldb, * ), taua( * ), taub( * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cggsvd( jobu, jobv, jobq, m, n, p, k, l, a, lda, b,    &
     &ldb, alpha, beta, u, ldu, v, ldv, q, ldq,                         &
     &work, rwork, iwork, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n, p
      integer            iwork( * )
      real               alpha( * ), beta( * ), rwork( * )
      complex            a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &u( ldu, * ), v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cggsvp( jobu, jobv, jobq, m, p, n, a, lda, b, ldb,     &
     &tola, tolb, k, l, u, ldu, v, ldv, q, ldq,                         &
     &iwork, rwork, tau, work, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n, p
      real               tola, tolb
      integer            iwork( * )
      real               rwork( * )
      complex            a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &tau( * ), u( ldu, * ), v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgtcon( norm, n, dl, d, du, du2, ipiv, anorm, rcond,   &
     &work, info )
      character          norm
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            d( * ), dl( * ), du( * ), du2( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgtrfs( trans, n, nrhs, dl, d, du, dlf, df, duf, du2,  &
     &ipiv, b, ldb, x, ldx, ferr, berr, work, rwork,                    &
     &info )
      character          trans
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            b( ldb, * ), d( * ), df( * ), dl( * ),         &
     &dlf( * ), du( * ), du2( * ), duf( * ),                            &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgtsv( n, nrhs, dl, d, du, b, ldb, info )
      integer            info, ldb, n, nrhs
      complex            b( ldb, * ), d( * ), dl( * ), du( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgtsvx( fact, trans, n, nrhs, dl, d, du, dlf, df, duf, &
     &du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr,                     &
     &work, rwork, info )
      character          fact, trans
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            b( ldb, * ), d( * ), df( * ), dl( * ),         &
     &dlf( * ), du( * ), du2( * ), duf( * ),                            &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgttrf( n, dl, d, du, du2, ipiv, info )
      integer            info, n
      integer            ipiv( * )
      complex            d( * ), dl( * ), du( * ), du2( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cgttrs( trans, n, nrhs, dl, d, du, du2, ipiv, b, ldb,  &
     &info )
      character          trans
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            b( ldb, * ), d( * ), dl( * ), du( * ), du2( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chbev( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,   &
     &rwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, n
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chbevd( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,  &
     &lwork, rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chbevx( jobz, range, uplo, n, kd, ab, ldab, q, ldq, vl, &
     &vu, il, iu, abstol, m, w, z, ldz, work, rwork,                    &
     &iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, kd, ldab, ldq, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), q( ldq, * ), work( * ),         &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chbgst( vect, uplo, n, ka, kb, ab, ldab, bb, ldbb, x,  &
     &ldx, work, rwork, info )
      character          uplo, vect
      integer            info, ka, kb, ldab, ldbb, ldx, n
      real               rwork( * )
      complex            ab( ldab, * ), bb( ldbb, * ), work( * ),       &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chbgv( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w, z, &
     &ldz, work, rwork, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, n
      real               rwork( * ), w( * )
      complex            ab( ldab, * ), bb( ldbb, * ), work( * ),       &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chbtrd( vect, uplo, n, kd, ab, ldab, d, e, q, ldq,     &
     &work, info )
      character          uplo, vect
      integer            info, kd, ldab, ldq, n
      real               d( * ), e( * )
      complex            ab( ldab, * ), q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine checon( uplo, n, a, lda, ipiv, anorm, rcond, work,     &
     &info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cheev( jobz, uplo, n, a, lda, w, work, lwork, rwork,   &
     &info )
      character          jobz, uplo
      integer            info, lda, lwork, n
      real               rwork( * ), w( * )
      complex            a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cheevd( jobz, uplo, n, a, lda, w, work, lwork, rwork,  &
     &lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, lda, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               rwork( * ), w( * )
      complex            a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cheevx( jobz, range, uplo, n, a, lda, vl, vu, il, iu,  &
     &abstol, m, w, z, ldz, work, lwork, rwork,                         &
     &iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, lwork, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            a( lda, * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chegs2( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chegst( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chegv( itype, jobz, uplo, n, a, lda, b, ldb, w, work,  &
     &lwork, rwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, lwork, n
      real               rwork( * ), w( * )
      complex            a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cherdb( jobz, uplo, n, kd, a, lda, d, e, tau,          &
     &z, ldz, work, lwork, info )
      character          jobz, uplo
      integer            kd, info, lda, ldz, lwork, n
      complex            a( lda, * ), tau( * ), work( * ), z( ldz, * )
      real               d( * ), e( * ) 
      END
      END INTERFACE

      INTERFACE
      subroutine cherfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chesv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,      &
     &lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine chesvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, &
     &ldb, x, ldx, rcond, ferr, berr, work, lwork,                      &
     &rwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chetd2( uplo, n, a, lda, d, e, tau, info )
      character          uplo
      integer            info, lda, n
      real               d( * ), e( * )
      complex            a( lda, * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chetf2( uplo, n, a, lda, ipiv, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chetrd( uplo, n, a, lda, d, e, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      real               d( * ), e( * )
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chetrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex            a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine chetri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chetrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chgeqz( job, compq, compz, n, ilo, ihi, a, lda, b, ldb, &
     &alpha, beta, q, ldq, z, ldz, work, lwork,                         &
     &rwork, info )
      character          compq, compz, job
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, lwork, n
      real               rwork( * )
      complex            a( lda, * ), alpha( * ), b( ldb, * ),          &
     &beta( * ), q( ldq, * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chpcon( uplo, n, ap, ipiv, anorm, rcond, work, info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chpev( jobz, uplo, n, ap, w, z, ldz, work, rwork,      &
     &info )
      character          jobz, uplo
      integer            info, ldz, n
      real               rwork( * ), w( * )
      complex            ap( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chpevd( jobz, uplo, n, ap, w, z, ldz, work, lwork,     &
     &rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               rwork( * ), w( * )
      complex            ap( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chpevx( jobz, range, uplo, n, ap, vl, vu, il, iu,      &
     &abstol, m, w, z, ldz, work, rwork, iwork,                         &
     &ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, ldz, m, n
      real               abstol, vl, vu
      integer            ifail( * ), iwork( * )
      real               rwork( * ), w( * )
      complex            ap( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chpgst( itype, uplo, n, ap, bp, info )
      character          uplo
      integer            info, itype, n
      complex            ap( * ), bp( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chpgv( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,  &
     &rwork, info )
      character          jobz, uplo
      integer            info, itype, ldz, n
      real               rwork( * ), w( * )
      complex            ap( * ), bp( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,  &
     &ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chpsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chpsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, &
     &ldx, rcond, ferr, berr, work, rwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chptrd( uplo, n, ap, d, e, tau, info )
      character          uplo
      integer            info, n
      real               d( * ), e( * )
      complex            ap( * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex            ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex            ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine chsein( side, eigsrc, initv, select, n, h, ldh, w, vl, &
     &ldvl, vr, ldvr, mm, m, work, rwork, ifaill,                       &
     &ifailr, info )
      character          eigsrc, initv, side
      integer            info, ldh, ldvl, ldvr, m, mm, n
      logical            select( * )
      integer            ifaill( * ), ifailr( * )
      real               rwork( * )
      complex            h( ldh, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine chseqr( job, compz, n, ilo, ihi, h, ldh, w, z, ldz,    &
     &work, lwork, info )
      character          compz, job
      integer            ihi, ilo, info, ldh, ldz, lwork, n
      complex            h( ldh, * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine claed0( qsiz, n, d, e, q, ldq, qstore, ldqs, rwork,    &
     &iwork, info )
      integer            info, ldq, ldqs, n, qsiz
      integer            iwork( * )
      real               d( * ), e( * ), rwork( * )
      complex            q( ldq, * ), qstore( ldqs, * )
      END
      END INTERFACE

      INTERFACE
      subroutine claed7( n, cutpnt, qsiz, tlvls, curlvl, curpbm, d, q,  &
     &ldq, rho, indxq, qstore, qptr, prmptr, perm,                      &
     &givptr, givcol, givnum, work, rwork, iwork,                       &
     &info )
      integer            curlvl, curpbm, cutpnt, info, ldq, n, qsiz,    &
     &tlvls
      real               rho
      integer            givcol( 2, * ), givptr( * ), indxq( * ),       &
     &iwork( * ), perm( * ), prmptr( * ), qptr( * )
      real               d( * ), givnum( 2, * ), qstore( * ), rwork( * )
      complex            q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine claed8( k, n, qsiz, q, ldq, d, rho, cutpnt, z, dlamda, &
     &q2, ldq2, w, indxp, indx, indxq, perm, givptr,                    &
     &givcol, givnum, info )
      integer            cutpnt, givptr, info, k, ldq, ldq2, n, qsiz
      real               rho
      integer            givcol( 2, * ), indx( * ), indxp( * ),         &
     &indxq( * ), perm( * )
      real               d( * ), dlamda( * ), givnum( 2, * ), w( * ),   &
     &z( * )
      complex            q( ldq, * ), q2( ldq2, * )
      END
      END INTERFACE

      INTERFACE
      subroutine clahef( uplo, n, nb, kb, a, lda, ipiv, w, ldw, info )
      character          uplo
      integer            info, kb, lda, ldw, n, nb
      integer            ipiv( * )
      complex            a( lda, * ), w( ldw, * )
      END
      END INTERFACE

      INTERFACE
      subroutine clasyf( uplo, n, nb, kb, a, lda, ipiv, w, ldw, info )
      character          uplo
      integer            info, kb, lda, ldw, n, nb
      integer            ipiv( * )
      complex            a( lda, * ), w( ldw, * )
      END
      END INTERFACE

      INTERFACE
      subroutine clatzm( side, m, n, v, incv, tau, c1, c2, ldc, work )
      character          side
      integer            incv, ldc, m, n
      complex            tau
      complex            c1( ldc, * ), c2( ldc, * ), v( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpbcon( uplo, n, kd, ab, ldab, anorm, rcond, work,     &
     &rwork, info )
      character          uplo
      integer            info, kd, ldab, n
      real               anorm, rcond
      real               rwork( * )
      complex            ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpbequ( uplo, n, kd, ab, ldab, s, scond, amax, info )
      character          uplo
      integer            info, kd, ldab, n
      real               amax, scond
      real               s( * )
      complex            ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpbrfs( uplo, n, kd, nrhs, ab, ldab, afb, ldafb, b,    &
     &ldb, x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpbstf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex            ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpbsv( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex            ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpbsvx( fact, uplo, n, kd, nrhs, ab, ldab, afb, ldafb, &
     &equed, s, b, ldb, x, ldx, rcond, ferr, berr,                      &
     &work, rwork, info )
      character          equed, fact, uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      real               rcond
      real               berr( * ), ferr( * ), rwork( * ), s( * )
      complex            ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpbtf2( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex            ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpbtrf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex            ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpbtrs( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex            ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpocon( uplo, n, a, lda, anorm, rcond, work, rwork,    &
     &info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      real               rwork( * )
      complex            a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpoequ( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      real               amax, scond
      real               s( * )
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cporfs( uplo, n, nrhs, a, lda, af, ldaf, b, ldb, x,    &
     &ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cposv( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cposvx( fact, uplo, n, nrhs, a, lda, af, ldaf, equed,  &
     &s, b, ldb, x, ldx, rcond, ferr, berr, work,                       &
     &rwork, info )
      character          equed, fact, uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      real               rcond
      real               berr( * ), ferr( * ), rwork( * ), s( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpotf2( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpotrf( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpotri( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpotrs( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cppcon( uplo, n, ap, anorm, rcond, work, rwork, info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      real               rwork( * )
      complex            ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cppequ( uplo, n, ap, s, scond, amax, info )
      character          uplo
      integer            info, n
      real               amax, scond
      real               s( * )
      complex            ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpprfs( uplo, n, nrhs, ap, afp, b, ldb, x, ldx, ferr,  &
     &berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cppsv( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      complex            ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cppsvx( fact, uplo, n, nrhs, ap, afp, equed, s, b, ldb, &
     &x, ldx, rcond, ferr, berr, work, rwork, info )
      character          equed, fact, uplo
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      real               berr( * ), ferr( * ), rwork( * ), s( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpptrf( uplo, n, ap, info )
      character          uplo
      integer            info, n
      complex            ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpptri( uplo, n, ap, info )
      character          uplo
      integer            info, n
      complex            ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpptrs( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      complex            ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cptcon( n, d, e, anorm, rcond, rwork, info )
      integer            info, n
      real               anorm, rcond
      real               d( * ), rwork( * )
      complex            e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * )
      complex            z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cptrfs( uplo, n, nrhs, d, e, df, ef, b, ldb, x, ldx,   &
     &ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      real               berr( * ), d( * ), df( * ), ferr( * ),         &
     &rwork( * )
      complex            b( ldb, * ), e( * ), ef( * ), work( * ),       &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cptsv( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      real               d( * )
      complex            b( ldb, * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cptsvx( fact, n, nrhs, d, e, df, ef, b, ldb, x, ldx,   &
     &rcond, ferr, berr, work, rwork, info )
      character          fact
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      real               berr( * ), d( * ), df( * ), ferr( * ),         &
     &rwork( * )
      complex            b( ldb, * ), e( * ), ef( * ), work( * ),       &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpttrf( n, d, e, info )
      integer            info, n
      real               d( * )
      complex            e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cpttrs( uplo, n, nrhs, d, e, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      real               d( * )
      complex            b( ldb, * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cspcon( uplo, n, ap, ipiv, anorm, rcond, work, info )
      character          uplo
      integer            info, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine csprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,  &
     &ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cspsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cspsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, &
     &ldx, rcond, ferr, berr, work, rwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine csptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex            ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine csptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex            ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine csptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex            ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cstedc( compz, n, d, e, z, ldz, work, lwork, rwork,    &
     &lrwork, iwork, liwork, info )
      character          compz
      integer            info, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      real               d( * ), e( * ), rwork( * )
      complex            work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine cstein( n, d, e, m, w, iblock, isplit, z, ldz, work,   &
     &iwork, ifail, info )
      integer            info, ldz, m, n
      integer            iblock( * ), ifail( * ), isplit( * ),          &
     &iwork( * )
      real               d( * ), e( * ), w( * ), work( * )
      complex            z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine csteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      real               d( * ), e( * ), work( * )
      complex            z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine csycon( uplo, n, a, lda, ipiv, anorm, rcond, work,     &
     &info )
      character          uplo
      integer            info, lda, n
      real               anorm, rcond
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine csyrfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine csysv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,      &
     &lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine csysvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, &
     &ldb, x, ldx, rcond, ferr, berr, work, lwork,                      &
     &rwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      real               rcond
      integer            ipiv( * )
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine csytf2( uplo, n, a, lda, ipiv, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine csytrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex            a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine csytri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex            a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine csytrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctbcon( norm, uplo, diag, n, kd, ab, ldab, rcond, work, &
     &rwork, info )
      character          diag, norm, uplo
      integer            info, kd, ldab, n
      real               rcond
      real               rwork( * )
      complex            ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctbrfs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,   &
     &ldb, x, ldx, ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            ab( ldab, * ), b( ldb, * ), work( * ),         &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctbtrs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,   &
     &ldb, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex            ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctgevc( side, howmny, select, n, a, lda, b, ldb, vl,   &
     &ldvl, vr, ldvr, mm, m, work, rwork, info )
      character          howmny, side
      integer            info, lda, ldb, ldvl, ldvr, m, mm, n
      logical            select( * )
      real               rwork( * )
      complex            a( lda, * ), b( ldb, * ), vl( ldvl, * ),       &
     &vr( ldvr, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctgsja( jobu, jobv, jobq, m, p, n, k, l, a, lda, b,    &
     &ldb, tola, tolb, alpha, beta, u, ldu, v, ldv,                     &
     &q, ldq, work, ncycle, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n,     &
     &ncycle, p
      real               tola, tolb
      real               alpha( * ), beta( * )
      complex            a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &u( ldu, * ), v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctpcon( norm, uplo, diag, n, ap, rcond, work, rwork,   &
     &info )
      character          diag, norm, uplo
      integer            info, n
      real               rcond
      real               rwork( * )
      complex            ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctprfs( uplo, trans, diag, n, nrhs, ap, b, ldb, x, ldx, &
     &ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            ap( * ), b( ldb, * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctptri( uplo, diag, n, ap, info )
      character          diag, uplo
      integer            info, n
      complex            ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctptrs( uplo, trans, diag, n, nrhs, ap, b, ldb, info )
      character          diag, trans, uplo
      integer            info, ldb, n, nrhs
      complex            ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrcon( norm, uplo, diag, n, a, lda, rcond, work,      &
     &rwork, info )
      character          diag, norm, uplo
      integer            info, lda, n
      real               rcond
      real               rwork( * )
      complex            a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrevc( side, howmny, select, n, t, ldt, vl, ldvl, vr, &
     &ldvr, mm, m, work, rwork, info )
      character          howmny, side
      integer            info, ldt, ldvl, ldvr, m, mm, n
      logical            select( * )
      real               rwork( * )
      complex            t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrexc( compq, n, t, ldt, q, ldq, ifst, ilst, info )
      character          compq
      integer            ifst, ilst, info, ldq, ldt, n
      complex            q( ldq, * ), t( ldt, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrrfs( uplo, trans, diag, n, nrhs, a, lda, b, ldb, x, &
     &ldx, ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, lda, ldb, ldx, n, nrhs
      real               berr( * ), ferr( * ), rwork( * )
      complex            a( lda, * ), b( ldb, * ), work( * ),           &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrsen( job, compq, select, n, t, ldt, q, ldq, w, m, s, &
     &sep, work, lwork, info )
      character          compq, job
      integer            info, ldq, ldt, lwork, m, n
      real               s, sep
      logical            select( * )
      complex            q( ldq, * ), t( ldt, * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrsna( job, howmny, select, n, t, ldt, vl, ldvl, vr,  &
     &ldvr, s, sep, mm, m, work, ldwork, rwork,                         &
     &info )
      character          howmny, job
      integer            info, ldt, ldvl, ldvr, ldwork, m, mm, n
      logical            select( * )
      real               rwork( * ), s( * ), sep( * )
      complex            t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &work( ldwork, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrsyl( trana, tranb, isgn, m, n, a, lda, b, ldb, c,   &
     &ldc, scale, info )
      character          trana, tranb
      integer            info, isgn, lda, ldb, ldc, m, n
      real               scale
      complex            a( lda, * ), b( ldb, * ), c( ldc, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrti2( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrtri( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      complex            a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctrtrs( uplo, trans, diag, n, nrhs, a, lda, b, ldb,    &
     &info )
      character          diag, trans, uplo
      integer            info, lda, ldb, n, nrhs
      complex            a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ctzrqf( m, n, a, lda, tau, info )
      integer            info, lda, m, n
      complex            a( lda, * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cung2l( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cung2r( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cungbr( vect, m, n, k, a, lda, tau, work, lwork, info )
      character          vect
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cunghr( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cungl2( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cunglq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cungql( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cungqr( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cungr2( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      complex            a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cungrq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cungtr( uplo, n, a, lda, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      complex            a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cunm2l( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cunm2r( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cunmbr( vect, side, trans, m, n, k, a, lda, tau, c,    &
     &ldc, work, lwork, info )
      character          side, trans, vect
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cunmhr( side, trans, m, n, ilo, ihi, a, lda, tau, c,   &
     &ldc, work, lwork, info )
      character          side, trans
      integer            ihi, ilo, info, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cunml2( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cunmlq( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cunmql( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cunmqr( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cunmr2( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cunmrq( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cunmtr( side, uplo, trans, m, n, a, lda, tau, c, ldc,  &
     &work, lwork, info )
      character          side, trans, uplo
      integer            info, lda, ldc, lwork, m, n
      complex            a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine cupgtr( uplo, n, ap, tau, q, ldq, work, info )
      character          uplo
      integer            info, ldq, n
      complex            ap( * ), q( ldq, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine cupmtr( side, uplo, trans, m, n, ap, tau, c, ldc, work, &
     &info )
      character          side, trans, uplo
      integer            info, ldc, m, n
      complex            ap( * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dbdsqr( uplo, n, ncvt, nru, ncc, d, e, vt, ldvt, u,    &
     &ldu, c, ldc, work, info )
      character          uplo
      integer            info, ldc, ldu, ldvt, n, ncc, ncvt, nru
      double precision   c( ldc, * ), d( * ), e( * ), u( ldu, * ),      &
     &vt( ldvt, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ddisna( job, m, n, d, sep, info )
      character          job
      integer            info, m, n
      double precision   d( * ), sep( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgbbrd( vect, m, n, ncc, kl, ku, ab, ldab, d, e, q,    &
     &ldq, pt, ldpt, c, ldc, work, info )
      character          vect
      integer            info, kl, ku, ldab, ldc, ldpt, ldq, m, n, ncc
      double precision   ab( ldab, * ), c( ldc, * ), d( * ), e( * ),    &
     &pt( ldpt, * ), q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgbcon( norm, n, kl, ku, ab, ldab, ipiv, anorm, rcond, &
     &work, iwork, info )
      character          norm
      integer            info, kl, ku, ldab, n
      double precision   anorm, rcond
      integer            ipiv( * ), iwork( * )
      double precision   ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgbequ( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,  &
     &amax, info )
      integer            info, kl, ku, ldab, m, n
      double precision   amax, colcnd, rowcnd
      double precision   ab( ldab, * ), c( * ), r( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgbrfs( trans, n, kl, ku, nrhs, ab, ldab, afb, ldafb,  &
     &ipiv, b, ldb, x, ldx, ferr, berr, work, iwork,                    &
     &info )
      character          trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgbsv( n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, info )
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      double precision   ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgbsvx( fact, trans, n, kl, ku, nrhs, ab, ldab, afb,   &
     &ldafb, ipiv, equed, r, c, b, ldb, x, ldx,                         &
     &rcond, ferr, berr, work, iwork, info )
      character          equed, fact, trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * ), iwork( * )
      double precision   ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &berr( * ), c( * ), ferr( * ), r( * ),                             &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgbtf2( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      double precision   ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgbtrf( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      double precision   ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgbtrs( trans, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, &
     &info )
      character          trans
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      double precision   ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgebak( job, side, n, ilo, ihi, scale, m, v, ldv,      &
     &info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      double precision   scale( * ), v( ldv, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgebal( job, n, a, lda, ilo, ihi, scale, info )
      character          job
      integer            ihi, ilo, info, lda, n
      double precision   a( lda, * ), scale( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgebd2( m, n, a, lda, d, e, tauq, taup, work, info )
      integer            info, lda, m, n
      double precision   a( lda, * ), d( * ), e( * ), taup( * ),        &
     &tauq( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgebrd( m, n, a, lda, d, e, tauq, taup, work, lwork,   &
     &info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), d( * ), e( * ), taup( * ),        &
     &tauq( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dgecon( norm, n, a, lda, anorm, rcond, work, iwork,    &
     &info )
      character          norm
      integer            info, lda, n
      double precision   anorm, rcond
      integer            iwork( * )
      double precision   a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgeequ( m, n, a, lda, r, c, rowcnd, colcnd, amax,      &
     &info )
      integer            info, lda, m, n
      double precision   amax, colcnd, rowcnd
      double precision   a( lda, * ), c( * ), r( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgees( jobvs, sort, select, n, a, lda, sdim, wr, wi,   &
     &vs, ldvs, work, lwork, bwork, info )
      character          jobvs, sort
      integer            info, lda, ldvs, lwork, n, sdim
      logical            bwork( * )
      double precision   a( lda, * ), vs( ldvs, * ), wi( * ), work( * ), &
     &wr( * )
      logical            select
      external           select
      END
      END INTERFACE

      INTERFACE
      subroutine dgeesx( jobvs, sort, select, sense, n, a, lda, sdim,   &
     &wr, wi, vs, ldvs, rconde, rcondv, work, lwork,                    &
     &iwork, liwork, bwork, info )
      character          jobvs, sense, sort
      integer            info, lda, ldvs, liwork, lwork, n, sdim
      double precision   rconde, rcondv
      logical            bwork( * )
      integer            iwork( * )
      double precision   a( lda, * ), vs( ldvs, * ), wi( * ), work( * ), &
     &wr( * )
      logical            select
      external           select
      END
      END INTERFACE

      INTERFACE
      subroutine dgeev( jobvl, jobvr, n, a, lda, wr, wi, vl, ldvl, vr,  &
     &ldvr, work, lwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldvl, ldvr, lwork, n
      double precision   a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &wi( * ), work( * ), wr( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgeevx( balanc, jobvl, jobvr, sense, n, a, lda, wr, wi, &
     &vl, ldvl, vr, ldvr, ilo, ihi, scale, abnrm,                       &
     &rconde, rcondv, work, lwork, iwork, info )
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldvl, ldvr, lwork, n
      double precision   abnrm
      integer            iwork( * )
      double precision   a( lda, * ), rconde( * ), rcondv( * ),         &
     &scale( * ), vl( ldvl, * ), vr( ldvr, * ),                         &
     &wi( * ), work( * ), wr( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgegs( jobvsl, jobvsr, n, a, lda, b, ldb, alphar,      &
     &alphai, beta, vsl, ldvsl, vsr, ldvsr, work,                       &
     &lwork, info )
      character          jobvsl, jobvsr
      integer            info, lda, ldb, ldvsl, ldvsr, lwork, n
      double precision   a( lda, * ), alphai( * ), alphar( * ),         &
     &b( ldb, * ), beta( * ), vsl( ldvsl, * ),                          &
     &vsr( ldvsr, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgegv( jobvl, jobvr, n, a, lda, b, ldb, alphar, alphai, &
     &beta, vl, ldvl, vr, ldvr, work, lwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldb, ldvl, ldvr, lwork, n
      double precision   a( lda, * ), alphai( * ), alphar( * ),         &
     &b( ldb, * ), beta( * ), vl( ldvl, * ),                            &
     &vr( ldvr, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgehd2( n, ilo, ihi, a, lda, tau, work, info )
      integer            ihi, ilo, info, lda, n
      double precision   a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgehrd( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dgelq2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgelqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dgels( trans, m, n, nrhs, a, lda, b, ldb, work, lwork, &
     &info )
      character          trans
      integer            info, lda, ldb, lwork, m, n, nrhs
      double precision   a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dgelss( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,    &
     &work, lwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      double precision   rcond
      double precision   a( lda, * ), b( ldb, * ), s( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgelsd( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,    &
     &work, lwork, iwork, info )
      integer            info, lda, ldb, lwork,m,n,nrhs,rank,iwork(*)
      double precision   rcond
      double precision   a( lda, * ), b( ldb, * ), s( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgelsx( m, n, nrhs, a, lda, b, ldb, jpvt, rcond, rank, &
     &work, info )
      integer            info, lda, ldb, m, n, nrhs, rank
      double precision   rcond
      integer            jpvt( * )
      double precision   a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgeql2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgeqlf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dgeqr2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgeqrf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dgerfs( trans, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, iwork, info )
      character          trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgerq2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgerqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dgesv( n, nrhs, a, lda, ipiv, b, ldb, info )
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      double precision   a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgesvd( jobu, jobvt, m, n, a, lda, s, u, ldu, vt, ldvt, &
     &work, lwork, info )
      character          jobu, jobvt
      integer            info, lda, ldu, ldvt, lwork, m, n
      double precision   a( lda, * ), s( * ), u( ldu, * ),              &
     &vt( ldvt, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgesvx( fact, trans, n, nrhs, a, lda, af, ldaf, ipiv,  &
     &equed, r, c, b, ldb, x, ldx, rcond, ferr, berr,                   &
     &work, iwork, info )
      character          equed, fact, trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * ), iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), c( * ), ferr( * ), r( * ),                             &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgetf2( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      double precision   a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgetrf( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      double precision   a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgetri( n, a, lda, ipiv, work, lwork, info )
      integer            info, lda, lwork, n
      integer            ipiv( * )
      double precision   a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dgetrs( trans, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          trans
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      double precision   a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dggbak( job, side, n, ilo, ihi, lscale, rscale, m, v,  &
     &ldv, info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      double precision   lscale( * ), rscale( * ), v( ldv, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dggbal( job, n, a, lda, b, ldb, ilo, ihi, lscale,      &
     &rscale, work, info )
      character          job
      integer            ihi, ilo, info, lda, ldb, n
      double precision   a( lda, * ), b( ldb, * ), lscale( * ),         &
     &rscale( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dggglm( n, m, p, a, lda, b, ldb, d, x, y, work, lwork, &
     &info )
      integer            info, lda, ldb, lwork, m, n, p
      double precision   a( lda, * ), b( ldb, * ), d( * ), work( * ),   &
     &x( * ), y( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgghrd( compq, compz, n, ilo, ihi, a, lda, b, ldb, q,  &
     &ldq, z, ldz, info )
      character          compq, compz
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, n
      double precision   a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgglse( m, n, p, a, lda, b, ldb, c, d, x, work, lwork, &
     &info )
      integer            info, lda, ldb, lwork, m, n, p
      double precision   a( lda, * ), b( ldb, * ), c( * ), d( * ),      &
     &work( * ), x( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dggqrf( n, m, p, a, lda, taua, b, ldb, taub, work,     &
     &lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      double precision   a( lda, * ), b( ldb, * ), taua( * ), taub( * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dggrqf( m, p, n, a, lda, taua, b, ldb, taub, work,     &
     &lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      double precision   a( lda, * ), b( ldb, * ), taua( * ), taub( * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dggsvd( jobu, jobv, jobq, m, n, p, k, l, a, lda, b,    &
     &ldb, alpha, beta, u, ldu, v, ldv, q, ldq, work,                   &
     &iwork, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n, p
      integer            iwork( * )
      double precision   a( lda, * ), alpha( * ), b( ldb, * ),          &
     &beta( * ), q( ldq, * ), u( ldu, * ),                              &
     &v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dggsvp( jobu, jobv, jobq, m, p, n, a, lda, b, ldb,     &
     &tola, tolb, k, l, u, ldu, v, ldv, q, ldq,                         &
     &iwork, tau, work, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n, p
      double precision   tola, tolb
      integer            iwork( * )
      double precision   a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &tau( * ), u( ldu, * ), v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgtcon( norm, n, dl, d, du, du2, ipiv, anorm, rcond,   &
     &work, iwork, info )
      character          norm
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * ), iwork( * )
      double precision   d( * ), dl( * ), du( * ), du2( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgtrfs( trans, n, nrhs, dl, d, du, dlf, df, duf, du2,  &
     &ipiv, b, ldb, x, ldx, ferr, berr, work, iwork,                    &
     &info )
      character          trans
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   b( ldb, * ), berr( * ), d( * ), df( * ),       &
     &dl( * ), dlf( * ), du( * ), du2( * ), duf( * ),                   &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgtsv( n, nrhs, dl, d, du, b, ldb, info )
      integer            info, ldb, n, nrhs
      double precision   b( ldb, * ), d( * ), dl( * ), du( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgtsvx( fact, trans, n, nrhs, dl, d, du, dlf, df, duf, &
     &du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr,                     &
     &work, iwork, info )
      character          fact, trans
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * ), iwork( * )
      double precision   b( ldb, * ), berr( * ), d( * ), df( * ),       &
     &dl( * ), dlf( * ), du( * ), du2( * ), duf( * ),                   &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgttrf( n, dl, d, du, du2, ipiv, info )
      integer            info, n
      integer            ipiv( * )
      double precision   d( * ), dl( * ), du( * ), du2( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dgttrs( trans, n, nrhs, dl, d, du, du2, ipiv, b, ldb,  &
     &info )
      character          trans
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      double precision   b( ldb, * ), d( * ), dl( * ), du( * ), du2( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dhgeqz( job, compq, compz, n, ilo, ihi, a, lda, b, ldb, &
     &alphar, alphai, beta, q, ldq, z, ldz, work,                       &
     &lwork, info )
      character          compq, compz, job
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, lwork, n
      double precision   a( lda, * ), alphai( * ), alphar( * ),         &
     &b( ldb, * ), beta( * ), q( ldq, * ), work( * ),                   &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dhsein( side, eigsrc, initv, select, n, h, ldh, wr, wi, &
     &vl, ldvl, vr, ldvr, mm, m, work, ifaill,                          &
     &ifailr, info )
      character          eigsrc, initv, side
      integer            info, ldh, ldvl, ldvr, m, mm, n
      logical            select( * )
      integer            ifaill( * ), ifailr( * )
      double precision   h( ldh, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &wi( * ), work( * ), wr( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dhseqr( job, compz, n, ilo, ihi, h, ldh, wr, wi, z,    &
     &ldz, work, lwork, info )
      character          compz, job
      integer            ihi, ilo, info, ldh, ldz, lwork, n
      double precision   h( ldh, * ), wi( * ), work( * ), wr( * ),      &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlabad( small, large )
      double precision   small
      double precision   large
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed0( icompq, qsiz, n, d, e, q, ldq, qstore, ldqs,   &
     &work, iwork, info )
      integer            icompq, info, ldq, ldqs, n, qsiz
      integer            iwork( * )
      double precision   d( * ), e( * ), q( ldq, * ), qstore( ldqs, * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed1( n, d, q, ldq, indxq, rho, cutpnt, work, iwork, &
     &info )
      integer            cutpnt, info, ldq, n
      double precision   rho
      integer            indxq( * ), iwork( * )
      double precision   d( * ), q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed2( k, n, d, q, ldq, indxq, rho, cutpnt, z, dlamda, &
     &q2, ldq2, indxc, w, indxp, indx, coltyp, info )
      integer            cutpnt, info, k, ldq, ldq2, n
      double precision   rho
      integer            coltyp( * ), indx( * ), indxc( * ), indxp( * ), &
     &indxq( * )
      double precision   d( * ), dlamda( * ), q( ldq, * ),              &
     &q2( ldq2, * ), w( * ), z( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed3( k, kstart, kstop, n, d, q, ldq, rho, cutpnt,   &
     &dlamda, q2, ldq2, indxc, ctot, w, s, lds,                         &
     &info )
      integer            cutpnt, info, k, kstart, kstop, ldq, ldq2, lds, &
     &n
      double precision   rho
      integer            ctot( * ), indxc( * )
      double precision   d( * ), dlamda( * ), q( ldq, * ),              &
     &q2( ldq2, * ), s( lds, * ), w( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed4( n, i, d, z, delta, rho, dlam, info )
      integer            i, info, n
      double precision   dlam, rho
      double precision   d( * ), delta( * ), z( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed5( i, d, z, delta, rho, dlam )
      integer            i
      double precision   dlam, rho
      double precision   d( 2 ), delta( 2 ), z( 2 )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed6( kniter, orgati, rho, d, z, finit, tau, info )
      logical            orgati
      integer            info, kniter
      double precision   finit, rho, tau
      double precision   d( 3 ), z( 3 )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed7( icompq, n, qsiz, tlvls, curlvl, curpbm, d, q,  &
     &ldq, indxq, rho, cutpnt, qstore, qptr, prmptr,                    &
     &perm, givptr, givcol, givnum, work, iwork,                        &
     &info )
      integer            curlvl, curpbm, cutpnt, icompq, info, ldq, n,  &
     &qsiz, tlvls
      double precision   rho
      integer            givcol( 2, * ), givptr( * ), indxq( * ),       &
     &iwork( * ), perm( * ), prmptr( * ), qptr( * )
      double precision   d( * ), givnum( 2, * ), q( ldq, * ),           &
     &qstore( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed8( icompq, k, n, qsiz, d, q, ldq, indxq, rho,     &
     &cutpnt, z, dlamda, q2, ldq2, w, perm, givptr,                     &
     &givcol, givnum, indxp, indx, info )
      integer            cutpnt, givptr, icompq, info, k, ldq, ldq2, n, &
     &qsiz
      double precision   rho
      integer            givcol( 2, * ), indx( * ), indxp( * ),         &
     &indxq( * ), perm( * )
      double precision   d( * ), dlamda( * ), givnum( 2, * ),           &
     &q( ldq, * ), q2( ldq2, * ), w( * ), z( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaed9( k, kstart, kstop, n, d, q, ldq, rho, dlamda, w, &
     &s, lds, info )
      integer            info, k, kstart, kstop, ldq, lds, n
      double precision   rho
      double precision   d( * ), dlamda( * ), q( ldq, * ), s( lds, * ), &
     &w( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlaeda( n, tlvls, curlvl, curpbm, prmptr, perm, givptr, &
     &givcol, givnum, q, qptr, z, ztemp, info )
      integer            curlvl, curpbm, info, n, tlvls
      integer            givcol( 2, * ), givptr( * ), perm( * ),        &
     &prmptr( * ), qptr( * )
      double precision   givnum( 2, * ), q( * ), z( * ), ztemp( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlagtf( n, a, lambda, b, c, tol, d, in, info )
      integer            info, n
      double precision   lambda, tol
      integer            in( * )
      double precision   a( * ), b( * ), c( * ), d( * )
      END
      END INTERFACE

      INTERFACE
      function dlamch( cmach )
      double precision   dlamch
      character          cmach
      END
      END INTERFACE

      INTERFACE
      subroutine dlamc1( beta, t, rnd, ieee1 )
      integer            beta
      integer            t
      logical            rnd
      logical            ieee1
      END
      END INTERFACE

      INTERFACE
      subroutine dlamc2( beta, t, rnd, eps, emin, rmin, emax, rmax )
      integer            beta
      integer            t
      logical            rnd
      double precision   eps
      integer            emin
      double precision   rmin
      integer            emax
      double precision   rmax
      END
      END INTERFACE

      INTERFACE
      function dlamc3( a, b )
      double precision   a
      double precision   b
      double precision   dlamc3
      END
      END INTERFACE

      INTERFACE
      subroutine dlamc4( emin, start, base )
      integer            emin
      double precision   start
      integer            base
      END
      END INTERFACE

      INTERFACE
      subroutine dlamc5( beta, p, emin, ieee, emax, rmax )
      integer            beta
      integer            p
      integer            emin
      logical            ieee
      integer            emax
      double precision   rmax
      END
      END INTERFACE

      INTERFACE
      subroutine dlamrg( n1, n2, a, dtrd1, dtrd2, index )
      integer            dtrd1, dtrd2, n1, n2
      integer            index( * )
      double precision   a( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlasq1( n, d, e, work, info )
      integer            info, n
      double precision   d( * ), e( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlasq2( m, q, e, qq, ee, eps, tol2, small2, sup, kend, &
     &info )
      integer            info, kend, m
      double precision   eps, small2, sup, tol2
      double precision   e( * ), ee( * ), q( * ), qq( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlasq3( n, q, e, qq, ee, sup, sigma, kend, off, iphase, &
     &iconv, eps, tol2, small2 )
      integer            iconv, iphase, kend, n, off
      double precision   eps, sigma, small2, sup, tol2
      double precision   e( * ), ee( * ), q( * ), qq( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlasq4( n, q, e, tau, sup )
      integer            n
      double precision   sup, tau
      double precision   e( * ), q( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlasrt( id, n, d, info )
      character          id
      integer            info, n
      double precision   d( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlasyf( uplo, n, nb, kb, a, lda, ipiv, w, ldw, info )
      character          uplo
      integer            info, kb, lda, ldw, n, nb
      integer            ipiv( * )
      double precision   a( lda, * ), w( ldw, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dlatzm( side, m, n, v, incv, tau, c1, c2, ldc, work )
      character          side
      integer            incv, ldc, m, n
      double precision   tau
      double precision   c1( ldc, * ), c2( ldc, * ), v( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dopgtr( uplo, n, ap, tau, q, ldq, work, info )
      character          uplo
      integer            info, ldq, n
      double precision   ap( * ), q( ldq, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dopmtr( side, uplo, trans, m, n, ap, tau, c, ldc, work, &
     &info )
      character          side, trans, uplo
      integer            info, ldc, m, n
      double precision   ap( * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dorg2l( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dorg2r( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dorgbr( vect, m, n, k, a, lda, tau, work, lwork, info )
      character          vect
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dorghr( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dorgl2( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dorglq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dorgql( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dorgqr( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dorgr2( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      double precision   a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dorgrq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dorgtr( uplo, n, a, lda, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      double precision   a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dorm2l( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dorm2r( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dormbr( vect, side, trans, m, n, k, a, lda, tau, c,    &
     &ldc, work, lwork, info )
      character          side, trans, vect
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dormhr( side, trans, m, n, ilo, ihi, a, lda, tau, c,   &
     &ldc, work, lwork, info )
      character          side, trans
      integer            ihi, ilo, info, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dorml2( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dormlq( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dormql( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dormqr( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dormr2( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dormrq( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dormtr( side, uplo, trans, m, n, a, lda, tau, c, ldc,  &
     &work, lwork, info )
      character          side, trans, uplo
      integer            info, lda, ldc, lwork, m, n
      double precision   a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dpbcon( uplo, n, kd, ab, ldab, anorm, rcond, work,     &
     &iwork, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   anorm, rcond
      integer            iwork( * )
      double precision   ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpbequ( uplo, n, kd, ab, ldab, s, scond, amax, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   amax, scond
      double precision   ab( ldab, * ), s( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpbrfs( uplo, n, kd, nrhs, ab, ldab, afb, ldafb, b,    &
     &ldb, x, ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpbstf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpbsv( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      double precision   ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpbsvx( fact, uplo, n, kd, nrhs, ab, ldab, afb, ldafb, &
     &equed, s, b, ldb, x, ldx, rcond, ferr, berr,                      &
     &work, iwork, info )
      character          equed, fact, uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      double precision   rcond
      integer            iwork( * )
      double precision   ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &berr( * ), ferr( * ), s( * ), work( * ),                          &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpbtf2( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpbtrf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpbtrs( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      double precision   ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpocon( uplo, n, a, lda, anorm, rcond, work, iwork,    &
     &info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      integer            iwork( * )
      double precision   a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpoequ( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      double precision   amax, scond
      double precision   a( lda, * ), s( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dporfs( uplo, n, nrhs, a, lda, af, ldaf, b, ldb, x,    &
     &ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dposv( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      double precision   a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dposvx( fact, uplo, n, nrhs, a, lda, af, ldaf, equed,  &
     &s, b, ldb, x, ldx, rcond, ferr, berr, work,                       &
     &iwork, info )
      character          equed, fact, uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      double precision   rcond
      integer            iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), s( * ), work( * ),                          &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpotf2( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      double precision   a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpotrf( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      double precision   a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpotri( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      double precision   a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpotrs( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      double precision   a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dppcon( uplo, n, ap, anorm, rcond, work, iwork, info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      integer            iwork( * )
      double precision   ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dppequ( uplo, n, ap, s, scond, amax, info )
      character          uplo
      integer            info, n
      double precision   amax, scond
      double precision   ap( * ), s( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpprfs( uplo, n, nrhs, ap, afp, b, ldb, x, ldx, ferr,  &
     &berr, work, iwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   afp( * ), ap( * ), b( ldb, * ), berr( * ),     &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dppsv( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      double precision   ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dppsvx( fact, uplo, n, nrhs, ap, afp, equed, s, b, ldb, &
     &x, ldx, rcond, ferr, berr, work, iwork, info )
      character          equed, fact, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            iwork( * )
      double precision   afp( * ), ap( * ), b( ldb, * ), berr( * ),     &
     &ferr( * ), s( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpptrf( uplo, n, ap, info )
      character          uplo
      integer            info, n
      double precision   ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpptri( uplo, n, ap, info )
      character          uplo
      integer            info, n
      double precision   ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpptrs( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      double precision   ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dptcon( n, d, e, anorm, rcond, work, info )
      integer            info, n
      double precision   anorm, rcond
      double precision   d( * ), e( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dptrfs( n, nrhs, d, e, df, ef, b, ldb, x, ldx, ferr,   &
     &berr, work, info )
      integer            info, ldb, ldx, n, nrhs
      double precision   b( ldb, * ), berr( * ), d( * ), df( * ),       &
     &e( * ), ef( * ), ferr( * ), work( * ),                            &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dptsv( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      double precision   b( ldb, * ), d( * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dptsvx( fact, n, nrhs, d, e, df, ef, b, ldb, x, ldx,   &
     &rcond, ferr, berr, work, info )
      character          fact
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      double precision   b( ldb, * ), berr( * ), d( * ), df( * ),       &
     &e( * ), ef( * ), ferr( * ), work( * ),                            &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpttrf( n, d, e, info )
      integer            info, n
      double precision   d( * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dpttrs( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      double precision   b( ldb, * ), d( * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsbev( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,   &
     &info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, n
      double precision   ab( ldab, * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsbevd( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,  &
     &lwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   ab( ldab, * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsbevx( jobz, range, uplo, n, kd, ab, ldab, q, ldq, vl, &
     &vu, il, iu, abstol, m, w, z, ldz, work, iwork,                    &
     &ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, kd, ldab, ldq, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   ab( ldab, * ), q( ldq, * ), w( * ), work( * ), &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsbgst( vect, uplo, n, ka, kb, ab, ldab, bb, ldbb, x,  &
     &ldx, work, info )
      character          uplo, vect
      integer            info, ka, kb, ldab, ldbb, ldx, n
      double precision   ab( ldab, * ), bb( ldbb, * ), work( * ),       &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsbgv( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w, z, &
     &ldz, work, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, n
      double precision   ab( ldab, * ), bb( ldbb, * ), w( * ),          &
     &work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsbtrd( vect, uplo, n, kd, ab, ldab, d, e, q, ldq,     &
     &work, info )
      character          uplo, vect
      integer            info, kd, ldab, ldq, n
      double precision   ab( ldab, * ), d( * ), e( * ), q( ldq, * ),    &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      function dsecnd()
      double precision   dsecnd
      END
      END INTERFACE

      INTERFACE
      subroutine dspcon( uplo, n, ap, ipiv, anorm, rcond, work, iwork,  &
     &info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * ), iwork( * )
      double precision   ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dspev( jobz, uplo, n, ap, w, z, ldz, work, info )
      character          jobz, uplo
      integer            info, ldz, n
      double precision   ap( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dspevd( jobz, uplo, n, ap, w, z, ldz, work, lwork,     &
     &iwork, liwork, info )
      character          jobz, uplo
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   ap( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dspevx( jobz, range, uplo, n, ap, vl, vu, il, iu,      &
     &abstol, m, w, z, ldz, work, iwork, ifail,                         &
     &info )
      character          jobz, range, uplo
      integer            il, info, iu, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   ap( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dspgst( itype, uplo, n, ap, bp, info )
      character          uplo
      integer            info, itype, n
      double precision   ap( * ), bp( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dspgv( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,  &
     &info )
      character          jobz, uplo
      integer            info, itype, ldz, n
      double precision   ap( * ), bp( * ), w( * ), work( * ),           &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,  &
     &ferr, berr, work, iwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   afp( * ), ap( * ), b( ldb, * ), berr( * ),     &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dspsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      double precision   ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dspsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, &
     &ldx, rcond, ferr, berr, work, iwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * ), iwork( * )
      double precision   afp( * ), ap( * ), b( ldb, * ), berr( * ),     &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsptrd( uplo, n, ap, d, e, tau, info )
      character          uplo
      integer            info, n
      double precision   ap( * ), d( * ), e( * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      double precision   ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      double precision   ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      double precision   ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dstebz( range, order, n, vl, vu, il, iu, abstol, d, e, &
     &m, nsplit, w, iblock, isplit, work, iwork,                        &
     &info )
      character          order, range
      integer            il, info, iu, m, n, nsplit
      double precision   abstol, vl, vu
      integer            iblock( * ), isplit( * ), iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dstedc( compz, n, d, e, z, ldz, work, lwork, iwork,    &
     &liwork, info )
      character          compz
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dstein( n, d, e, m, w, iblock, isplit, z, ldz, work,   &
     &iwork, ifail, info )
      integer            info, ldz, m, n
      integer            iblock( * ), ifail( * ), isplit( * ),          &
     &iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsterf( n, d, e, info )
      integer            info, n
      double precision   d( * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dstev( jobz, n, d, e, z, ldz, work, info )
      character          jobz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dstevd( jobz, n, d, e, z, ldz, work, lwork, iwork,     &
     &liwork, info )
      character          jobz
      integer            info, ldz, liwork, lwork, n
      integer            iwork( * )
      double precision   d( * ), e( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dstevx( jobz, range, n, d, e, vl, vu, il, iu, abstol,  &
     &m, w, z, ldz, work, iwork, ifail, info )
      character          jobz, range
      integer            il, info, iu, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsycon( uplo, n, a, lda, ipiv, anorm, rcond, work,     &
     &iwork, info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      integer            ipiv( * ), iwork( * )
      double precision   a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsyev( jobz, uplo, n, a, lda, w, work, lwork, info )
      character          jobz, uplo
      integer            info, lda, lwork, n
      double precision   a( lda, * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsyevd( jobz, uplo, n, a, lda, w, work, lwork, iwork,  &
     &liwork, info )
      character          jobz, uplo
      integer            info, lda, liwork, lwork, n
      integer            iwork( * )
      double precision   a( lda, * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsyevx( jobz, range, uplo, n, a, lda, vl, vu, il, iu,  &
     &abstol, m, w, z, ldz, work, lwork, iwork,                         &
     &ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, lwork, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   a( lda, * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsygs2( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      double precision   a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsygst( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      double precision   a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsygv( itype, jobz, uplo, n, a, lda, b, ldb, w, work,  &
     &lwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, lwork, n
      double precision   a( lda, * ), b( ldb, * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsyrdb( jobz, uplo, n, kd, a, lda, d, e, tau,          &
     &z, ldz, work, lwork, info )
      character          jobz, uplo
      integer            kd, info, lda, ldz, lwork, n
      double precision   a( lda, * ), d( * ), e( * ), tau( * ),         &
     &work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsyrfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, iwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * ), iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsysv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,      &
     &lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      double precision   a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dsysvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, &
     &ldb, x, ldx, rcond, ferr, berr, work, lwork,                      &
     &iwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      double precision   rcond
      integer            ipiv( * ), iwork( * )
      double precision   a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &berr( * ), ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsytd2( uplo, n, a, lda, d, e, tau, info )
      character          uplo
      integer            info, lda, n
      double precision   a( lda, * ), d( * ), e( * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsytf2( uplo, n, a, lda, ipiv, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      double precision   a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsytrd( uplo, n, a, lda, d, e, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      double precision   a( lda, * ), d( * ), e( * ), tau( * ),         &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsytrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      double precision   a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine dsytri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      double precision   a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dsytrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      double precision   a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtbcon( norm, uplo, diag, n, kd, ab, ldab, rcond, work, &
     &iwork, info )
      character          diag, norm, uplo
      integer            info, kd, ldab, n
      double precision   rcond
      integer            iwork( * )
      double precision   ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtbrfs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,   &
     &ldb, x, ldx, ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   ab( ldab, * ), b( ldb, * ), berr( * ),         &
     &ferr( * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtbtrs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,   &
     &ldb, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, n, nrhs
      double precision   ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtgevc( side, howmny, select, n, a, lda, b, ldb, vl,   &
     &ldvl, vr, ldvr, mm, m, work, info )
      character          howmny, side
      integer            info, lda, ldb, ldvl, ldvr, m, mm, n
      logical            select( * )
      double precision   a( lda, * ), b( ldb, * ), vl( ldvl, * ),       &
     &vr( ldvr, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtgsja( jobu, jobv, jobq, m, p, n, k, l, a, lda, b,    &
     &ldb, tola, tolb, alpha, beta, u, ldu, v, ldv,                     &
     &q, ldq, work, ncycle, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n,     &
     &ncycle, p
      double precision   tola, tolb
      double precision   a( lda, * ), alpha( * ), b( ldb, * ),          &
     &beta( * ), q( ldq, * ), u( ldu, * ),                              &
     &v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtpcon( norm, uplo, diag, n, ap, rcond, work, iwork,   &
     &info )
      character          diag, norm, uplo
      integer            info, n
      double precision   rcond
      integer            iwork( * )
      double precision   ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtprfs( uplo, trans, diag, n, nrhs, ap, b, ldb, x, ldx, &
     &ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   ap( * ), b( ldb, * ), berr( * ), ferr( * ),    &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtptri( uplo, diag, n, ap, info )
      character          diag, uplo
      integer            info, n
      double precision   ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtptrs( uplo, trans, diag, n, nrhs, ap, b, ldb, info )
      character          diag, trans, uplo
      integer            info, ldb, n, nrhs
      double precision   ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrcon( norm, uplo, diag, n, a, lda, rcond, work,      &
     &iwork, info )
      character          diag, norm, uplo
      integer            info, lda, n
      double precision   rcond
      integer            iwork( * )
      double precision   a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrevc( side, howmny, select, n, t, ldt, vl, ldvl, vr, &
     &ldvr, mm, m, work, info )
      character          howmny, side
      integer            info, ldt, ldvl, ldvr, m, mm, n
      logical            select( * )
      double precision   t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrexc( compq, n, t, ldt, q, ldq, ifst, ilst, work,    &
     &info )
      character          compq
      integer            ifst, ilst, info, ldq, ldt, n
      double precision   q( ldq, * ), t( ldt, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrrfs( uplo, trans, diag, n, nrhs, a, lda, b, ldb, x, &
     &ldx, ferr, berr, work, iwork, info )
      character          diag, trans, uplo
      integer            info, lda, ldb, ldx, n, nrhs
      integer            iwork( * )
      double precision   a( lda, * ), b( ldb, * ), berr( * ), ferr( * ), &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrsen( job, compq, select, n, t, ldt, q, ldq, wr, wi, &
     &m, s, sep, work, lwork, iwork, liwork, info )
      character          compq, job
      integer            info, ldq, ldt, liwork, lwork, m, n
      double precision   s, sep
      logical            select( * )
      integer            iwork( * )
      double precision   q( ldq, * ), t( ldt, * ), wi( * ), work( * ),  &
     &wr( * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrsna( job, howmny, select, n, t, ldt, vl, ldvl, vr,  &
     &ldvr, s, sep, mm, m, work, ldwork, iwork,                         &
     &info )
      character          howmny, job
      integer            info, ldt, ldvl, ldvr, ldwork, m, mm, n
      logical            select( * )
      integer            iwork( * )
      double precision   s( * ), sep( * ), t( ldt, * ), vl( ldvl, * ),  &
     &vr( ldvr, * ), work( ldwork, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrsyl( trana, tranb, isgn, m, n, a, lda, b, ldb, c,   &
     &ldc, scale, info )
      character          trana, tranb
      integer            info, isgn, lda, ldb, ldc, m, n
      double precision   scale
      double precision   a( lda, * ), b( ldb, * ), c( ldc, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrti2( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      double precision   a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrtri( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      double precision   a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtrtrs( uplo, trans, diag, n, nrhs, a, lda, b, ldb,    &
     &info )
      character          diag, trans, uplo
      integer            info, lda, ldb, n, nrhs
      double precision   a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine dtzrqf( m, n, a, lda, tau, info )
      integer            info, lda, m, n
      double precision   a( lda, * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zbdsqr( uplo, n, ncvt, nru, ncc, d, e, vt, ldvt, u,    &
     &ldu, c, ldc, rwork, info )
      character          uplo
      integer            info, ldc, ldu, ldvt, n, ncc, ncvt, nru
      double precision   d( * ), e( * ), rwork( * )
      complex*16         c( ldc, * ), u( ldu, * ), vt( ldvt, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgbbrd( vect, m, n, ncc, kl, ku, ab, ldab, d, e, q,    &
     &ldq, pt, ldpt, c, ldc, work, rwork, info )
      character          vect
      integer            info, kl, ku, ldab, ldc, ldpt, ldq, m, n, ncc
      double precision   d( * ), e( * ), rwork( * )
      complex*16         ab( ldab, * ), c( ldc, * ), pt( ldpt, * ),     &
     &q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgbcon( norm, n, kl, ku, ab, ldab, ipiv, anorm, rcond, &
     &work, rwork, info )
      character          norm
      integer            info, kl, ku, ldab, n
      double precision   anorm, rcond
      integer            ipiv( * )
      double precision   rwork( * )
      complex*16         ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgbequ( m, n, kl, ku, ab, ldab, r, c, rowcnd, colcnd,  &
     &amax, info )
      integer            info, kl, ku, ldab, m, n
      double precision   amax, colcnd, rowcnd
      double precision   c( * ), r( * )
      complex*16         ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgbrfs( trans, n, kl, ku, nrhs, ab, ldab, afb, ldafb,  &
     &ipiv, b, ldb, x, ldx, ferr, berr, work, rwork,                    &
     &info )
      character          trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgbsv( n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, info )
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgbsvx( fact, trans, n, kl, ku, nrhs, ab, ldab, afb,   &
     &ldafb, ipiv, equed, r, c, b, ldb, x, ldx,                         &
     &rcond, ferr, berr, work, rwork, info )
      character          equed, fact, trans
      integer            info, kl, ku, ldab, ldafb, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), c( * ), ferr( * ), r( * ),          &
     &rwork( * )
      complex*16         ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgbtf2( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      complex*16         ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgbtrf( m, n, kl, ku, ab, ldab, ipiv, info )
      integer            info, kl, ku, ldab, m, n
      integer            ipiv( * )
      complex*16         ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgbtrs( trans, n, kl, ku, nrhs, ab, ldab, ipiv, b, ldb, &
     &info )
      character          trans
      integer            info, kl, ku, ldab, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgebak( job, side, n, ilo, ihi, scale, m, v, ldv,      &
     &info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      double precision   scale( * )
      complex*16         v( ldv, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgebal( job, n, a, lda, ilo, ihi, scale, info )
      character          job
      integer            ihi, ilo, info, lda, n
      double precision   scale( * )
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgebd2( m, n, a, lda, d, e, tauq, taup, work, info )
      integer            info, lda, m, n
      double precision   d( * ), e( * )
      complex*16         a( lda, * ), taup( * ), tauq( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgebrd( m, n, a, lda, d, e, tauq, taup, work, lwork,   &
     &info )
      integer            info, lda, lwork, m, n
      double precision   d( * ), e( * )
      complex*16         a( lda, * ), taup( * ), tauq( * ),             &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zgecon( norm, n, a, lda, anorm, rcond, work, rwork,    &
     &info )
      character          norm
      integer            info, lda, n
      double precision   anorm, rcond
      double precision   rwork( * )
      complex*16         a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgeequ( m, n, a, lda, r, c, rowcnd, colcnd, amax,      &
     &info )
      integer            info, lda, m, n
      double precision   amax, colcnd, rowcnd
      double precision   c( * ), r( * )
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgees( jobvs, sort, select, n, a, lda, sdim, w, vs,    &
     &ldvs, work, lwork, rwork, bwork, info )
      character          jobvs, sort
      integer            info, lda, ldvs, lwork, n, sdim
      logical            bwork( * )
      double precision   rwork( * )
      complex*16         a( lda, * ), vs( ldvs, * ), w( * ), work( * )
      logical            select
      external           select
      END
      END INTERFACE

      INTERFACE
      subroutine zgeesx( jobvs, sort, select, sense, n, a, lda, sdim, w, &
     &vs, ldvs, rconde, rcondv, work, lwork, rwork,                     &
     &bwork, info )
      character          jobvs, sense, sort
      integer            info, lda, ldvs, lwork, n, sdim
      double precision   rconde, rcondv
      logical            bwork( * )
      double precision   rwork( * )
      complex*16         a( lda, * ), vs( ldvs, * ), w( * ), work( * )
      logical            select
      external           select
      END
      END INTERFACE

      INTERFACE
      subroutine zgeev( jobvl, jobvr, n, a, lda, w, vl, ldvl, vr, ldvr, &
     &work, lwork, rwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldvl, ldvr, lwork, n
      double precision   rwork( * )
      complex*16         a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgeevx( balanc, jobvl, jobvr, sense, n, a, lda, w, vl, &
     &ldvl, vr, ldvr, ilo, ihi, scale, abnrm, rconde,                   &
     &rcondv, work, lwork, rwork, info )
      character          balanc, jobvl, jobvr, sense
      integer            ihi, ilo, info, lda, ldvl, ldvr, lwork, n
      double precision   abnrm
      double precision   rconde( * ), rcondv( * ), rwork( * ),          &
     &scale( * )
      complex*16         a( lda, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgegs( jobvsl, jobvsr, n, a, lda, b, ldb, alpha, beta, &
     &vsl, ldvsl, vsr, ldvsr, work, lwork, rwork,                       &
     &info )
      character          jobvsl, jobvsr
      integer            info, lda, ldb, ldvsl, ldvsr, lwork, n
      double precision   rwork( * )
      complex*16         a( lda, * ), alpha( * ), b( ldb, * ),          &
     &beta( * ), vsl( ldvsl, * ), vsr( ldvsr, * ),                      &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgegv( jobvl, jobvr, n, a, lda, b, ldb, alpha, beta,   &
     &vl, ldvl, vr, ldvr, work, lwork, rwork, info )
      character          jobvl, jobvr
      integer            info, lda, ldb, ldvl, ldvr, lwork, n
      double precision   rwork( * )
      complex*16         a( lda, * ), alpha( * ), b( ldb, * ),          &
     &beta( * ), vl( ldvl, * ), vr( ldvr, * ),                          &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgehd2( n, ilo, ihi, a, lda, tau, work, info )
      integer            ihi, ilo, info, lda, n
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgehrd( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zgelq2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgelqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zgels( trans, m, n, nrhs, a, lda, b, ldb, work, lwork, &
     &info )
      character          trans
      integer            info, lda, ldb, lwork, m, n, nrhs
      complex*16         a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zgelss( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,    &
     &work, lwork, rwork, info )
      integer            info, lda, ldb, lwork, m, n, nrhs, rank
      double precision   rcond
      double precision   rwork( * ), s( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgelsd( m, n, nrhs, a, lda, b, ldb, s, rcond, rank,    &
     &work, lwork, rwork, iwork, info )
      integer            info,lda,ldb,lwork,m,n,nrhs,rank, iwork(*)
      double precision   rcond
      double precision   rwork( * ), s( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgelsx( m, n, nrhs, a, lda, b, ldb, jpvt, rcond, rank, &
     &work, rwork, info )
      integer            info, lda, ldb, m, n, nrhs, rank
      double precision   rcond
      integer            jpvt( * )
      double precision   rwork( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgeql2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgeqlf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zgeqr2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgeqrf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zgerfs( trans, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, rwork, info )
      character          trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgerq2( m, n, a, lda, tau, work, info )
      integer            info, lda, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgerqf( m, n, a, lda, tau, work, lwork, info )
      integer            info, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zgesv( n, nrhs, a, lda, ipiv, b, ldb, info )
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgesvd( jobu, jobvt, m, n, a, lda, s, u, ldu, vt, ldvt, &
     &work, lwork, rwork, info )
      character          jobu, jobvt
      integer            info, lda, ldu, ldvt, lwork, m, n
      double precision   rwork( * ), s( * )
      complex*16         a( lda, * ), u( ldu, * ), vt( ldvt, * ),       &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgesvx( fact, trans, n, nrhs, a, lda, af, ldaf, ipiv,  &
     &equed, r, c, b, ldb, x, ldx, rcond, ferr, berr,                   &
     &work, rwork, info )
      character          equed, fact, trans
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), c( * ), ferr( * ), r( * ),          &
     &rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgetf2( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgetrf( m, n, a, lda, ipiv, info )
      integer            info, lda, m, n
      integer            ipiv( * )
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgetri( n, a, lda, ipiv, work, lwork, info )
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zgetrs( trans, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          trans
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zggbak( job, side, n, ilo, ihi, lscale, rscale, m, v,  &
     &ldv, info )
      character          job, side
      integer            ihi, ilo, info, ldv, m, n
      double precision   lscale( * ), rscale( * )
      complex*16         v( ldv, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zggbal( job, n, a, lda, b, ldb, ilo, ihi, lscale,      &
     &rscale, work, info )
      character          job
      integer            ihi, ilo, info, lda, ldb, n
      double precision   lscale( * ), rscale( * ), work( * )
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zggglm( n, m, p, a, lda, b, ldb, d, x, y, work, lwork, &
     &info )
      integer            info, lda, ldb, lwork, m, n, p
      complex*16         a( lda, * ), b( ldb, * ), d( * ), work( * ),   &
     &x( * ), y( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgghrd( compq, compz, n, ilo, ihi, a, lda, b, ldb, q,  &
     &ldq, z, ldz, info )
      character          compq, compz
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, n
      complex*16         a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgglse( m, n, p, a, lda, b, ldb, c, d, x, work, lwork, &
     &info )
      integer            info, lda, ldb, lwork, m, n, p
      complex*16         a( lda, * ), b( ldb, * ), c( * ), d( * ),      &
     &work( * ), x( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zggqrf( n, m, p, a, lda, taua, b, ldb, taub, work,     &
     &lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      complex*16         a( lda, * ), b( ldb, * ), taua( * ), taub( * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zggrqf( m, p, n, a, lda, taua, b, ldb, taub, work,     &
     &lwork, info )
      integer            info, lda, ldb, lwork, m, n, p
      complex*16         a( lda, * ), b( ldb, * ), taua( * ), taub( * ), &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zggsvd( jobu, jobv, jobq, m, n, p, k, l, a, lda, b,    &
     &ldb, alpha, beta, u, ldu, v, ldv, q, ldq, work,                   &
     &rwork, iwork, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n, p
      integer            iwork( * )
      double precision   alpha( * ), beta( * ), rwork( * )
      complex*16         a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &u( ldu, * ), v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zggsvp( jobu, jobv, jobq, m, p, n, a, lda, b, ldb,     &
     &tola, tolb, k, l, u, ldu, v, ldv, q, ldq,                         &
     &iwork, rwork, tau, work, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n, p
      double precision   tola, tolb
      integer            iwork( * )
      double precision   rwork( * )
      complex*16         a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &tau( * ), u( ldu, * ), v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgtcon( norm, n, dl, d, du, du2, ipiv, anorm, rcond,   &
     &work, info )
      character          norm
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         d( * ), dl( * ), du( * ), du2( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgtrfs( trans, n, nrhs, dl, d, du, dlf, df, duf, du2,  &
     &ipiv, b, ldb, x, ldx, ferr, berr, work, rwork,                    &
     &info )
      character          trans
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         b( ldb, * ), d( * ), df( * ), dl( * ),         &
     &dlf( * ), du( * ), du2( * ), duf( * ),                            &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgtsv( n, nrhs, dl, d, du, b, ldb, info )
      integer            info, ldb, n, nrhs
      complex*16         b( ldb, * ), d( * ), dl( * ), du( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgtsvx( fact, trans, n, nrhs, dl, d, du, dlf, df, duf, &
     &du2, ipiv, b, ldb, x, ldx, rcond, ferr, berr,                     &
     &work, rwork, info )
      character          fact, trans
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         b( ldb, * ), d( * ), df( * ), dl( * ),         &
     &dlf( * ), du( * ), du2( * ), duf( * ),                            &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgttrf( n, dl, d, du, du2, ipiv, info )
      integer            info, n
      integer            ipiv( * )
      complex*16         d( * ), dl( * ), du( * ), du2( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zgttrs( trans, n, nrhs, dl, d, du, du2, ipiv, b, ldb,  &
     &info )
      character          trans
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         b( ldb, * ), d( * ), dl( * ), du( * ), du2( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhbev( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,   &
     &rwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, n
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhbevd( jobz, uplo, n, kd, ab, ldab, w, z, ldz, work,  &
     &lwork, rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, kd, ldab, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhbevx( jobz, range, uplo, n, kd, ab, ldab, q, ldq, vl, &
     &vu, il, iu, abstol, m, w, z, ldz, work, rwork,                    &
     &iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, kd, ldab, ldq, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), q( ldq, * ), work( * ),         &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhbgst( vect, uplo, n, ka, kb, ab, ldab, bb, ldbb, x,  &
     &ldx, work, rwork, info )
      character          uplo, vect
      integer            info, ka, kb, ldab, ldbb, ldx, n
      double precision   rwork( * )
      complex*16         ab( ldab, * ), bb( ldbb, * ), work( * ),       &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhbgv( jobz, uplo, n, ka, kb, ab, ldab, bb, ldbb, w, z, &
     &ldz, work, rwork, info )
      character          jobz, uplo
      integer            info, ka, kb, ldab, ldbb, ldz, n
      double precision   rwork( * ), w( * )
      complex*16         ab( ldab, * ), bb( ldbb, * ), work( * ),       &
     &z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhbtrd( vect, uplo, n, kd, ab, ldab, d, e, q, ldq,     &
     &work, info )
      character          uplo, vect
      integer            info, kd, ldab, ldq, n
      double precision   d( * ), e( * )
      complex*16         ab( ldab, * ), q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhecon( uplo, n, a, lda, ipiv, anorm, rcond, work,     &
     &info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zheev( jobz, uplo, n, a, lda, w, work, lwork, rwork,   &
     &info )
      character          jobz, uplo
      integer            info, lda, lwork, n
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zheevd( jobz, uplo, n, a, lda, w, work, lwork, rwork,  &
     &lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, lda, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zheevx( jobz, range, uplo, n, a, lda, vl, vu, il, iu,  &
     &abstol, m, w, z, ldz, work, lwork, rwork,                         &
     &iwork, ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, lda, ldz, lwork, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhegs2( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhegst( itype, uplo, n, a, lda, b, ldb, info )
      character          uplo
      integer            info, itype, lda, ldb, n
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhegv( itype, jobz, uplo, n, a, lda, b, ldb, w, work,  &
     &lwork, rwork, info )
      character          jobz, uplo
      integer            info, itype, lda, ldb, lwork, n
      double precision   rwork( * ), w( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zherdb( jobz, uplo, n, kd, a, lda, d, e, tau,          &
     &z, ldz, work, lwork, info )
      character          jobz, uplo
      integer            kd, info, lda, ldz, lwork, n
      complex*16         a( lda, * ), tau( * ), work( * ), z( ldz, * )
      double precision   d( * ), e( * ) 
      END
      END INTERFACE

      INTERFACE
      subroutine zherfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhesv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,      &
     &lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zhesvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, &
     &ldb, x, ldx, rcond, ferr, berr, work, lwork,                      &
     &rwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhetd2( uplo, n, a, lda, d, e, tau, info )
      character          uplo
      integer            info, lda, n
      double precision   d( * ), e( * )
      complex*16         a( lda, * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhetf2( uplo, n, a, lda, ipiv, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhetrd( uplo, n, a, lda, d, e, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      double precision   d( * ), e( * )
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhetrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zhetri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhetrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhgeqz( job, compq, compz, n, ilo, ihi, a, lda, b, ldb, &
     &alpha, beta, q, ldq, z, ldz, work, lwork,                         &
     &rwork, info )
      character          compq, compz, job
      integer            ihi, ilo, info, lda, ldb, ldq, ldz, lwork, n
      double precision   rwork( * )
      complex*16         a( lda, * ), alpha( * ), b( ldb, * ),          &
     &beta( * ), q( ldq, * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhpcon( uplo, n, ap, ipiv, anorm, rcond, work, info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhpev( jobz, uplo, n, ap, w, z, ldz, work, rwork,      &
     &info )
      character          jobz, uplo
      integer            info, ldz, n
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhpevd( jobz, uplo, n, ap, w, z, ldz, work, lwork,     &
     &rwork, lrwork, iwork, liwork, info )
      character          jobz, uplo
      integer            info, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhpevx( jobz, range, uplo, n, ap, vl, vu, il, iu,      &
     &abstol, m, w, z, ldz, work, rwork, iwork,                         &
     &ifail, info )
      character          jobz, range, uplo
      integer            il, info, iu, ldz, m, n
      double precision   abstol, vl, vu
      integer            ifail( * ), iwork( * )
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhpgst( itype, uplo, n, ap, bp, info )
      character          uplo
      integer            info, itype, n
      complex*16         ap( * ), bp( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhpgv( itype, jobz, uplo, n, ap, bp, w, z, ldz, work,  &
     &rwork, info )
      character          jobz, uplo
      integer            info, itype, ldz, n
      double precision   rwork( * ), w( * )
      complex*16         ap( * ), bp( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,  &
     &ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhpsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhpsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, &
     &ldx, rcond, ferr, berr, work, rwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhptrd( uplo, n, ap, d, e, tau, info )
      character          uplo
      integer            info, n
      double precision   d( * ), e( * )
      complex*16         ap( * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex*16         ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex*16         ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhsein( side, eigsrc, initv, select, n, h, ldh, w, vl, &
     &ldvl, vr, ldvr, mm, m, work, rwork, ifaill,                       &
     &ifailr, info )
      character          eigsrc, initv, side
      integer            info, ldh, ldvl, ldvr, m, mm, n
      logical            select( * )
      integer            ifaill( * ), ifailr( * )
      double precision   rwork( * )
      complex*16         h( ldh, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zhseqr( job, compz, n, ilo, ihi, h, ldh, w, z, ldz,    &
     &work, lwork, info )
      character          compz, job
      integer            ihi, ilo, info, ldh, ldz, lwork, n
      complex*16         h( ldh, * ), w( * ), work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zlaed0( qsiz, n, d, e, q, ldq, qstore, ldqs, rwork,    &
     &iwork, info )
      integer            info, ldq, ldqs, n, qsiz
      integer            iwork( * )
      double precision   d( * ), e( * ), rwork( * )
      complex*16         q( ldq, * ), qstore( ldqs, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zlaed7( n, cutpnt, qsiz, tlvls, curlvl, curpbm, d, q,  &
     &ldq, rho, indxq, qstore, qptr, prmptr, perm,                      &
     &givptr, givcol, givnum, work, rwork, iwork,                       &
     &info )
      integer            curlvl, curpbm, cutpnt, info, ldq, n, qsiz,    &
     &tlvls
      double precision   rho
      integer            givcol( 2, * ), givptr( * ), indxq( * ),       &
     &iwork( * ), perm( * ), prmptr( * ), qptr( * )
      double precision   d( * ), givnum( 2, * ), qstore( * ), rwork( * )
      complex*16         q( ldq, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zlaed8( k, n, qsiz, q, ldq, d, rho, cutpnt, z, dlamda, &
     &q2, ldq2, w, indxp, indx, indxq, perm, givptr,                    &
     &givcol, givnum, info )
      integer            cutpnt, givptr, info, k, ldq, ldq2, n, qsiz
      double precision   rho
      integer            givcol( 2, * ), indx( * ), indxp( * ),         &
     &indxq( * ), perm( * )
      double precision   d( * ), dlamda( * ), givnum( 2, * ), w( * ),   &
     &z( * )
      complex*16         q( ldq, * ), q2( ldq2, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zlahef( uplo, n, nb, kb, a, lda, ipiv, w, ldw, info )
      character          uplo
      integer            info, kb, lda, ldw, n, nb
      integer            ipiv( * )
      complex*16         a( lda, * ), w( ldw, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zlasyf( uplo, n, nb, kb, a, lda, ipiv, w, ldw, info )
      character          uplo
      integer            info, kb, lda, ldw, n, nb
      integer            ipiv( * )
      complex*16         a( lda, * ), w( ldw, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zlatzm( side, m, n, v, incv, tau, c1, c2, ldc, work )
      character          side
      integer            incv, ldc, m, n
      complex*16         tau
      complex*16         c1( ldc, * ), c2( ldc, * ), v( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpbcon( uplo, n, kd, ab, ldab, anorm, rcond, work,     &
     &rwork, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   anorm, rcond
      double precision   rwork( * )
      complex*16         ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpbequ( uplo, n, kd, ab, ldab, s, scond, amax, info )
      character          uplo
      integer            info, kd, ldab, n
      double precision   amax, scond
      double precision   s( * )
      complex*16         ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpbrfs( uplo, n, kd, nrhs, ab, ldab, afb, ldafb, b,    &
     &ldb, x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpbstf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex*16         ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpbsv( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex*16         ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpbsvx( fact, uplo, n, kd, nrhs, ab, ldab, afb, ldafb, &
     &equed, s, b, ldb, x, ldx, rcond, ferr, berr,                      &
     &work, rwork, info )
      character          equed, fact, uplo
      integer            info, kd, ldab, ldafb, ldb, ldx, n, nrhs
      double precision   rcond
      double precision   berr( * ), ferr( * ), rwork( * ), s( * )
      complex*16         ab( ldab, * ), afb( ldafb, * ), b( ldb, * ),   &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpbtf2( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex*16         ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpbtrf( uplo, n, kd, ab, ldab, info )
      character          uplo
      integer            info, kd, ldab, n
      complex*16         ab( ldab, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpbtrs( uplo, n, kd, nrhs, ab, ldab, b, ldb, info )
      character          uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex*16         ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpocon( uplo, n, a, lda, anorm, rcond, work, rwork,    &
     &info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      double precision   rwork( * )
      complex*16         a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpoequ( n, a, lda, s, scond, amax, info )
      integer            info, lda, n
      double precision   amax, scond
      double precision   s( * )
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zporfs( uplo, n, nrhs, a, lda, af, ldaf, b, ldb, x,    &
     &ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zposv( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zposvx( fact, uplo, n, nrhs, a, lda, af, ldaf, equed,  &
     &s, b, ldb, x, ldx, rcond, ferr, berr, work,                       &
     &rwork, info )
      character          equed, fact, uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      double precision   rcond
      double precision   berr( * ), ferr( * ), rwork( * ), s( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpotf2( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpotrf( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpotri( uplo, n, a, lda, info )
      character          uplo
      integer            info, lda, n
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpotrs( uplo, n, nrhs, a, lda, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zppcon( uplo, n, ap, anorm, rcond, work, rwork, info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      double precision   rwork( * )
      complex*16         ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zppequ( uplo, n, ap, s, scond, amax, info )
      character          uplo
      integer            info, n
      double precision   amax, scond
      double precision   s( * )
      complex*16         ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpprfs( uplo, n, nrhs, ap, afp, b, ldb, x, ldx, ferr,  &
     &berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zppsv( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      complex*16         ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zppsvx( fact, uplo, n, nrhs, ap, afp, equed, s, b, ldb, &
     &x, ldx, rcond, ferr, berr, work, rwork, info )
      character          equed, fact, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      double precision   berr( * ), ferr( * ), rwork( * ), s( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpptrf( uplo, n, ap, info )
      character          uplo
      integer            info, n
      complex*16         ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpptri( uplo, n, ap, info )
      character          uplo
      integer            info, n
      complex*16         ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpptrs( uplo, n, nrhs, ap, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      complex*16         ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zptcon( n, d, e, anorm, rcond, rwork, info )
      integer            info, n
      double precision   anorm, rcond
      double precision   d( * ), rwork( * )
      complex*16         e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * )
      complex*16         z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zptrfs( uplo, n, nrhs, d, e, df, ef, b, ldb, x, ldx,   &
     &ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   berr( * ), d( * ), df( * ), ferr( * ),         &
     &rwork( * )
      complex*16         b( ldb, * ), e( * ), ef( * ), work( * ),       &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zptsv( n, nrhs, d, e, b, ldb, info )
      integer            info, ldb, n, nrhs
      double precision   d( * )
      complex*16         b( ldb, * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zptsvx( fact, n, nrhs, d, e, df, ef, b, ldb, x, ldx,   &
     &rcond, ferr, berr, work, rwork, info )
      character          fact
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      double precision   berr( * ), d( * ), df( * ), ferr( * ),         &
     &rwork( * )
      complex*16         b( ldb, * ), e( * ), ef( * ), work( * ),       &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpttrf( n, d, e, info )
      integer            info, n
      double precision   d( * )
      complex*16         e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zpttrs( uplo, n, nrhs, d, e, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      double precision   d( * )
      complex*16         b( ldb, * ), e( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zspcon( uplo, n, ap, ipiv, anorm, rcond, work, info )
      character          uplo
      integer            info, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsprfs( uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, ldx,  &
     &ferr, berr, work, rwork, info )
      character          uplo
      integer            info, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zspsv( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zspsvx( fact, uplo, n, nrhs, ap, afp, ipiv, b, ldb, x, &
     &ldx, rcond, ferr, berr, work, rwork, info )
      character          fact, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         afp( * ), ap( * ), b( ldb, * ), work( * ),     &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsptrf( uplo, n, ap, ipiv, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex*16         ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsptri( uplo, n, ap, ipiv, work, info )
      character          uplo
      integer            info, n
      integer            ipiv( * )
      complex*16         ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsptrs( uplo, n, nrhs, ap, ipiv, b, ldb, info )
      character          uplo
      integer            info, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zstedc( compz, n, d, e, z, ldz, work, lwork, rwork,    &
     &lrwork, iwork, liwork, info )
      character          compz
      integer            info, ldz, liwork, lrwork, lwork, n
      integer            iwork( * )
      double precision   d( * ), e( * ), rwork( * )
      complex*16         work( * ), z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zstein( n, d, e, m, w, iblock, isplit, z, ldz, work,   &
     &iwork, ifail, info )
      integer            info, ldz, m, n
      integer            iblock( * ), ifail( * ), isplit( * ),          &
     &iwork( * )
      double precision   d( * ), e( * ), w( * ), work( * )
      complex*16         z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsteqr( compz, n, d, e, z, ldz, work, info )
      character          compz
      integer            info, ldz, n
      double precision   d( * ), e( * ), work( * )
      complex*16         z( ldz, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsycon( uplo, n, a, lda, ipiv, anorm, rcond, work,     &
     &info )
      character          uplo
      integer            info, lda, n
      double precision   anorm, rcond
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsyrfs( uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, ldb, &
     &x, ldx, ferr, berr, work, rwork, info )
      character          uplo
      integer            info, lda, ldaf, ldb, ldx, n, nrhs
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsysv( uplo, n, nrhs, a, lda, ipiv, b, ldb, work,      &
     &lwork, info )
      character          uplo
      integer            info, lda, ldb, lwork, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zsysvx( fact, uplo, n, nrhs, a, lda, af, ldaf, ipiv, b, &
     &ldb, x, ldx, rcond, ferr, berr, work, lwork,                      &
     &rwork, info )
      character          fact, uplo
      integer            info, lda, ldaf, ldb, ldx, lwork, n, nrhs
      double precision   rcond
      integer            ipiv( * )
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), af( ldaf, * ), b( ldb, * ),       &
     &work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsytf2( uplo, n, a, lda, ipiv, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsytrf( uplo, n, a, lda, ipiv, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zsytri( uplo, n, a, lda, ipiv, work, info )
      character          uplo
      integer            info, lda, n
      integer            ipiv( * )
      complex*16         a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zsytrs( uplo, n, nrhs, a, lda, ipiv, b, ldb, info )
      character          uplo
      integer            info, lda, ldb, n, nrhs
      integer            ipiv( * )
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztbcon( norm, uplo, diag, n, kd, ab, ldab, rcond, work, &
     &rwork, info )
      character          diag, norm, uplo
      integer            info, kd, ldab, n
      double precision   rcond
      double precision   rwork( * )
      complex*16         ab( ldab, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztbrfs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,   &
     &ldb, x, ldx, ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         ab( ldab, * ), b( ldb, * ), work( * ),         &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztbtrs( uplo, trans, diag, n, kd, nrhs, ab, ldab, b,   &
     &ldb, info )
      character          diag, trans, uplo
      integer            info, kd, ldab, ldb, n, nrhs
      complex*16         ab( ldab, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztgevc( side, howmny, select, n, a, lda, b, ldb, vl,   &
     &ldvl, vr, ldvr, mm, m, work, rwork, info )
      character          howmny, side
      integer            info, lda, ldb, ldvl, ldvr, m, mm, n
      logical            select( * )
      double precision   rwork( * )
      complex*16         a( lda, * ), b( ldb, * ), vl( ldvl, * ),       &
     &vr( ldvr, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztgsja( jobu, jobv, jobq, m, p, n, k, l, a, lda, b,    &
     &ldb, tola, tolb, alpha, beta, u, ldu, v, ldv,                     &
     &q, ldq, work, ncycle, info )
      character          jobq, jobu, jobv
      integer            info, k, l, lda, ldb, ldq, ldu, ldv, m, n,     &
     &ncycle, p
      double precision   tola, tolb
      double precision   alpha( * ), beta( * )
      complex*16         a( lda, * ), b( ldb, * ), q( ldq, * ),         &
     &u( ldu, * ), v( ldv, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztpcon( norm, uplo, diag, n, ap, rcond, work, rwork,   &
     &info )
      character          diag, norm, uplo
      integer            info, n
      double precision   rcond
      double precision   rwork( * )
      complex*16         ap( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztprfs( uplo, trans, diag, n, nrhs, ap, b, ldb, x, ldx, &
     &ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         ap( * ), b( ldb, * ), work( * ), x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztptri( uplo, diag, n, ap, info )
      character          diag, uplo
      integer            info, n
      complex*16         ap( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztptrs( uplo, trans, diag, n, nrhs, ap, b, ldb, info )
      character          diag, trans, uplo
      integer            info, ldb, n, nrhs
      complex*16         ap( * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrcon( norm, uplo, diag, n, a, lda, rcond, work,      &
     &rwork, info )
      character          diag, norm, uplo
      integer            info, lda, n
      double precision   rcond
      double precision   rwork( * )
      complex*16         a( lda, * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrevc( side, howmny, select, n, t, ldt, vl, ldvl, vr, &
     &ldvr, mm, m, work, rwork, info )
      character          howmny, side
      integer            info, ldt, ldvl, ldvr, m, mm, n
      logical            select( * )
      double precision   rwork( * )
      complex*16         t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrexc( compq, n, t, ldt, q, ldq, ifst, ilst, info )
      character          compq
      integer            ifst, ilst, info, ldq, ldt, n
      complex*16         q( ldq, * ), t( ldt, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrrfs( uplo, trans, diag, n, nrhs, a, lda, b, ldb, x, &
     &ldx, ferr, berr, work, rwork, info )
      character          diag, trans, uplo
      integer            info, lda, ldb, ldx, n, nrhs
      double precision   berr( * ), ferr( * ), rwork( * )
      complex*16         a( lda, * ), b( ldb, * ), work( * ),           &
     &x( ldx, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrsen( job, compq, select, n, t, ldt, q, ldq, w, m, s, &
     &sep, work, lwork, info )
      character          compq, job
      integer            info, ldq, ldt, lwork, m, n
      double precision   s, sep
      logical            select( * )
      complex*16         q( ldq, * ), t( ldt, * ), w( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrsna( job, howmny, select, n, t, ldt, vl, ldvl, vr,  &
     &ldvr, s, sep, mm, m, work, ldwork, rwork,                         &
     &info )
      character          howmny, job
      integer            info, ldt, ldvl, ldvr, ldwork, m, mm, n
      logical            select( * )
      double precision   rwork( * ), s( * ), sep( * )
      complex*16         t( ldt, * ), vl( ldvl, * ), vr( ldvr, * ),     &
     &work( ldwork, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrsyl( trana, tranb, isgn, m, n, a, lda, b, ldb, c,   &
     &ldc, scale, info )
      character          trana, tranb
      integer            info, isgn, lda, ldb, ldc, m, n
      double precision   scale
      complex*16         a( lda, * ), b( ldb, * ), c( ldc, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrti2( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrtri( uplo, diag, n, a, lda, info )
      character          diag, uplo
      integer            info, lda, n
      complex*16         a( lda, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztrtrs( uplo, trans, diag, n, nrhs, a, lda, b, ldb,    &
     &info )
      character          diag, trans, uplo
      integer            info, lda, ldb, n, nrhs
      complex*16         a( lda, * ), b( ldb, * )
      END
      END INTERFACE

      INTERFACE
      subroutine ztzrqf( m, n, a, lda, tau, info )
      integer            info, lda, m, n
      complex*16         a( lda, * ), tau( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zung2l( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zung2r( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zungbr( vect, m, n, k, a, lda, tau, work, lwork, info )
      character          vect
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zunghr( n, ilo, ihi, a, lda, tau, work, lwork, info )
      integer            ihi, ilo, info, lda, lwork, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zungl2( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zunglq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zungql( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zungqr( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zungr2( m, n, k, a, lda, tau, work, info )
      integer            info, k, lda, m, n
      complex*16         a( lda, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zungrq( m, n, k, a, lda, tau, work, lwork, info )
      integer            info, k, lda, lwork, m, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zungtr( uplo, n, a, lda, tau, work, lwork, info )
      character          uplo
      integer            info, lda, lwork, n
      complex*16         a( lda, * ), tau( * ), work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zunm2l( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zunm2r( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zunmbr( vect, side, trans, m, n, k, a, lda, tau, c,    &
     &ldc, work, lwork, info )
      character          side, trans, vect
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zunmhr( side, trans, m, n, ilo, ihi, a, lda, tau, c,   &
     &ldc, work, lwork, info )
      character          side, trans
      integer            ihi, ilo, info, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zunml2( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zunmlq( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zunmql( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zunmqr( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zunmr2( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, info )
      character          side, trans
      integer            info, k, lda, ldc, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zunmrq( side, trans, m, n, k, a, lda, tau, c, ldc,     &
     &work, lwork, info )
      character          side, trans
      integer            info, k, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zunmtr( side, uplo, trans, m, n, a, lda, tau, c, ldc,  &
     &work, lwork, info )
      character          side, trans, uplo
      integer            info, lda, ldc, lwork, m, n
      complex*16         a( lda, * ), c( ldc, * ), tau( * ),            &
     &work( lwork )
      END
      END INTERFACE

      INTERFACE
      subroutine zupgtr( uplo, n, ap, tau, q, ldq, work, info )
      character          uplo
      integer            info, ldq, n
      complex*16         ap( * ), q( ldq, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      subroutine zupmtr( side, uplo, trans, m, n, ap, tau, c, ldc, work,&
     &info )
      character          side, trans, uplo
      integer            info, ldc, m, n
      complex*16         ap( * ), c( ldc, * ), tau( * ), work( * )
      END
      END INTERFACE

      INTERFACE
      function ieeeck( ispec, zero, one )
      integer            ispec
      real               zero
      real               one
      integer            ieeeck
      END
      END INTERFACE

      INTERFACE
      function ilaenv( ispec, name, opts, n1, n2, n3, n4 )
      integer            ispec
      character*(*)      name
      character*(*)      opts
      integer            n1
      integer            n2
      integer            n3
      integer            n4
      integer            ilaenv
      END
      END INTERFACE

      INTERFACE
      function lsamen( n, ca, cb )
      integer            n
      character*(*)      ca
      character*(*)      cb
      logical            lsamen
      END
      END INTERFACE

      INTERFACE
      SUBROUTINE DSGESV(N,NRHS,A,LDA,IPIV,B,LDB,X,LDX,WORK,SWORK,ITER,
     +                  INFO)
      INTEGER INFO,ITER,LDA,LDB,LDX,N,NRHS
      INTEGER IPIV(*)
      REAL SWORK(*)
      DOUBLE PRECISION A(LDA,*),B(LDB,*),WORK(N,*),X(LDX,*)
      END
      END INTERFACE

      INTERFACE
      SUBROUTINE ZCGESV(N,NRHS,A,LDA,IPIV,B,LDB,X,LDX,WORK,SWORK,ITER,
     +                  INFO)
      INTEGER INFO,ITER,LDA,LDB,LDX,N,NRHS
      INTEGER IPIV(*)
      COMPLEX SWORK(*)
      COMPLEX*16 A(LDA,*),B(LDB,*),WORK(N,*),X(LDX,*)
      END
      END INTERFACE

      INTERFACE
      SUBROUTINE DLAG2S(M,N,A,LDA,SA,LDSA,INFO)
      INTEGER INFO,LDA,LDSA,M,N
      REAL SA(LDSA,*)
      DOUBLE PRECISION A(LDA,*)
      END
      END INTERFACE

      INTERFACE
      SUBROUTINE SLAG2D(M,N,SA,LDSA,A,LDA,INFO)
      INTEGER INFO,LDA,LDSA,M,N
      REAL SA(LDSA,*)
      DOUBLE PRECISION A(LDA,*)
      END
      END INTERFACE

      INTERFACE
      SUBROUTINE ZLAG2C(M,N,A,LDA,SA,LDSA,INFO)
      INTEGER INFO,LDA,LDSA,M,N
      COMPLEX SA(LDSA,*)
      COMPLEX*16 A(LDA,*)
      END
      END INTERFACE

      INTERFACE
      SUBROUTINE CLAG2Z(M,N,SA,LDSA,A,LDA,INFO)
      INTEGER INFO,LDA,LDSA,M,N
      COMPLEX SA(LDSA,*)
      COMPLEX*16 A(LDA,*)
      END
      END INTERFACE

!DEC$ENDIF
